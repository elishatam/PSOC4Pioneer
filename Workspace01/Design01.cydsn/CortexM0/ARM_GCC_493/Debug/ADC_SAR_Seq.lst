ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_Init, %function
  23              	ADC_SAR_Seq_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * File Name: ADC_SAR_Seq.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #include "ADC_SAR_Seq.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint8 ADC_SAR_Seq_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int16 ADC_SAR_Seq_offset[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int32 ADC_SAR_Seq_countsPer10Volt[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** static const uint32 CYCODE ADC_SAR_Seq_channelsConfig[] = { 0x00000400u, 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  to zero before call of ADC_SAR_Seq_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Init() and ADC_SAR_Seq_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(ADC_SAR_Seq_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         static const uint8 CYCODE ADC_SAR_Seq_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 4


 141:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyIntSetPriority(ADC_SAR_Seq_INTC_NUMBER, ADC_SAR_Seq_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (void)CyIntSetVector(ADC_SAR_Seq_INTC_NUMBER, &ADC_SAR_Seq_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 5249     		ldr	r1, .L14
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif   /* End ADC_SAR_Seq_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = ADC_SAR_Seq_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 514B     		ldr	r3, .L14+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (((ADC_SAR_Seq_PUMP_CTRL_REG & ADC_SAR_Seq_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 514B     		ldr	r3, .L14+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 5


 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L12
  52 0020 5049     		ldr	r1, .L14+12
  53 0022 00E0     		b	.L2
  54              	.L12:
  55 0024 5049     		ldr	r1, .L14+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 514A     		ldr	r2, .L14+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 504A     		ldr	r2, .L14+24
  64 0030 504B     		ldr	r3, .L14+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG = ADC_SAR_Seq_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 504A     		ldr	r2, .L14+32
  68 0036 514B     		ldr	r3, .L14+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_COND_REG  = ADC_SAR_Seq_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 8022     		mov	r2, #128
  72 003c D205     		lsl	r2, r2, #23
  73 003e 504B     		ldr	r3, .L14+40
  74 0040 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0042 504B     		ldr	r3, .L14+44
  77 0044 504A     		ldr	r2, .L14+48
  78 0046 1360     		str	r3, [r2]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0048 504A     		ldr	r2, .L14+52
  81 004a 1360     		str	r3, [r2]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_MUX_SWITCH0_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004c 504B     		ldr	r3, .L14+56
  84 004e 1A68     		ldr	r2, [r3]
  85 0050 8021     		mov	r1, #128
  86 0052 4902     		lsl	r1, r1, #9
  87 0054 0A43     		orr	r2, r1
  88 0056 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
  89              		.loc 1 193 0 discriminator 4
  90 0058 4E4A     		ldr	r2, .L14+60
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 6


  91 005a 1368     		ldr	r3, [r2]
  92 005c 0B43     		orr	r3, r1
  93 005e 1360     		str	r3, [r2]
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /*ADC_SAR_Seq_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = 0u;
  94              		.loc 1 197 0 discriminator 4
  95 0060 0023     		mov	r3, #0
  96 0062 4D4A     		ldr	r2, .L14+64
  97 0064 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = 0u;
  98              		.loc 1 198 0 discriminator 4
  99 0066 4D4A     		ldr	r2, .L14+68
 100 0068 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_INTR_MASK_REG = ADC_SAR_Seq_SAR_INTR_MASK;
 101              		.loc 1 199 0 discriminator 4
 102 006a 1122     		mov	r2, #17
 103 006c 4C4B     		ldr	r3, .L14+72
 104 006e 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_ANA_TRIM_REG = ADC_SAR_Seq_TRIM_COEF;
 105              		.loc 1 202 0 discriminator 4
 106 0070 0F3A     		sub	r2, r2, #15
 107 0072 4C4B     		ldr	r3, .L14+76
 108 0074 1A60     		str	r2, [r3]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal = ADC_SAR_Seq_SAR_DFT_CTRL_REG;
 109              		.loc 1 206 0 discriminator 4
 110 0076 4C49     		ldr	r1, .L14+80
 111 0078 0A68     		ldr	r2, [r1]
 112              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_DCEN;
 113              		.loc 1 207 0 discriminator 4
 114 007a 4C4B     		ldr	r3, .L14+84
 115 007c 1340     		and	r3, r2
 116              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 117              		.loc 1 213 0 discriminator 4
 118 007e 0122     		mov	r2, #1
 119 0080 1343     		orr	r3, r2
 120              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DCEN;
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 7


 221:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_DFT_CTRL_REG = tmpRegVal;
 121              		.loc 1 226 0 discriminator 4
 122 0082 0B60     		str	r3, [r1]
 123              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_WOUNDING_REG = ADC_SAR_Seq_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_TOTAL_CHANNELS_NUM; chNum++)
 124              		.loc 1 232 0 discriminator 4
 125 0084 0022     		mov	r2, #0
 126 0086 64E0     		b	.L3
 127              	.LVL6:
 128              	.L11:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         tmpRegVal = (ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_CHANNEL_CONFIG_MASK);
 129              		.loc 1 234 0
 130 0088 4949     		ldr	r1, .L14+88
 131 008a 9300     		lsl	r3, r2, #2
 132 008c 5858     		ldr	r0, [r3, r1]
 133 008e DC23     		mov	r3, #220
 134 0090 9B01     		lsl	r3, r3, #6
 135 0092 0340     		and	r3, r0
 136              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_InputsPlacement[chNum];
 137              		.loc 1 236 0
 138 0094 8918     		add	r1, r1, r2
 139 0096 097A     		ldrb	r1, [r1, #8]
 140 0098 0B43     		orr	r3, r1
 141              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if((ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (ADC_SAR_Seq_ALT_WOUNDING == ADC_SAR_Seq_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(chNum < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 142              		.loc 1 250 0
 143 009a 002A     		cmp	r2, #0
 144 009c 1CD1     		bne	.L4
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 8


 145              		.loc 1 253 0
 146 009e 9100     		lsl	r1, r2, #2
 147 00a0 444C     		ldr	r4, .L14+92
 148 00a2 A446     		mov	ip, r4
 149 00a4 6144     		add	r1, r1, ip
 150 00a6 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 151              		.loc 1 255 0
 152 00a8 C307     		lsl	r3, r0, #31
 153 00aa 07D5     		bpl	.L5
 154              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 155              		.loc 1 257 0
 156 00ac 3A49     		ldr	r1, .L14+64
 157              	.LVL10:
 158 00ae 0868     		ldr	r0, [r1]
 159 00b0 8023     		mov	r3, #128
 160 00b2 5B02     		lsl	r3, r3, #9
 161 00b4 9340     		lsl	r3, r3, r2
 162 00b6 1B0C     		lsr	r3, r3, #16
 163 00b8 0343     		orr	r3, r0
 164 00ba 0B60     		str	r3, [r1]
 165              	.LVL11:
 166              	.L5:
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 167              		.loc 1 260 0
 168 00bc 9300     		lsl	r3, r2, #2
 169 00be 3C49     		ldr	r1, .L14+88
 170              	.LVL12:
 171 00c0 5B58     		ldr	r3, [r3, r1]
 172 00c2 9B07     		lsl	r3, r3, #30
 173 00c4 21D5     		bpl	.L6
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 174              		.loc 1 262 0
 175 00c6 3549     		ldr	r1, .L14+68
 176              	.LVL13:
 177 00c8 0868     		ldr	r0, [r1]
 178 00ca 8023     		mov	r3, #128
 179 00cc 5B02     		lsl	r3, r3, #9
 180 00ce 9340     		lsl	r3, r3, r2
 181 00d0 1B0C     		lsr	r3, r3, #16
 182 00d2 0343     		orr	r3, r0
 183 00d4 0B60     		str	r3, [r1]
 184 00d6 18E0     		b	.L6
 185              	.LVL14:
 186              	.L4:
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 CY_SET_REG32(ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_INJ_TAILG
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 9


 187              		.loc 1 268 0
 188 00d8 8021     		mov	r1, #128
 189 00da C905     		lsl	r1, r1, #23
 190 00dc 0B43     		orr	r3, r1
 191              	.LVL15:
 192 00de 3649     		ldr	r1, .L14+96
 193 00e0 0B60     		str	r3, [r1]
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 194              		.loc 1 270 0
 195 00e2 9300     		lsl	r3, r2, #2
 196 00e4 3249     		ldr	r1, .L14+88
 197              	.LVL16:
 198 00e6 5B58     		ldr	r3, [r3, r1]
 199 00e8 DB07     		lsl	r3, r3, #31
 200 00ea 04D5     		bpl	.L7
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_SATURATE_MASK;
 201              		.loc 1 272 0
 202 00ec 2C49     		ldr	r1, .L14+72
 203              	.LVL17:
 204 00ee 0868     		ldr	r0, [r1]
 205              	.LVL18:
 206 00f0 2023     		mov	r3, #32
 207 00f2 0343     		orr	r3, r0
 208 00f4 0B60     		str	r3, [r1]
 209              	.L7:
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 210              		.loc 1 275 0
 211 00f6 9300     		lsl	r3, r2, #2
 212 00f8 2D49     		ldr	r1, .L14+88
 213              	.LVL19:
 214 00fa 5B58     		ldr	r3, [r3, r1]
 215 00fc 9B07     		lsl	r3, r3, #30
 216 00fe 04D5     		bpl	.L6
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_RANGE_MASK;
 217              		.loc 1 277 0
 218 0100 2749     		ldr	r1, .L14+72
 219              	.LVL20:
 220 0102 0868     		ldr	r0, [r1]
 221 0104 4023     		mov	r3, #64
 222 0106 0343     		orr	r3, r0
 223 0108 0B60     		str	r3, [r1]
 224              	.L6:
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_ALT_RESOLUTION_ON) != 0u)
 225              		.loc 1 282 0
 226 010a 9300     		lsl	r3, r2, #2
 227 010c 2849     		ldr	r1, .L14+88
 228              	.LVL21:
 229 010e 5958     		ldr	r1, [r3, r1]
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 10


 230              	.LVL22:
 231 0110 8B05     		lsl	r3, r1, #22
 232 0112 02D5     		bpl	.L13
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_DEFAULT_MAX_WRK_ALT;
 233              		.loc 1 284 0
 234 0114 8020     		mov	r0, #128
 235 0116 4000     		lsl	r0, r0, #1
 236 0118 01E0     		b	.L8
 237              	.L13:
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_SAR_WRK_MAX_12BIT;
 238              		.loc 1 288 0
 239 011a 8020     		mov	r0, #128
 240 011c 4001     		lsl	r0, r0, #5
 241              	.L8:
 242              	.LVL23:
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_DIFFERENTIAL_EN) == 0u)
 243              		.loc 1 291 0
 244 011e CB05     		lsl	r3, r1, #23
 245 0120 04D4     		bmi	.L9
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if((ADC_SAR_Seq_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 (ADC_SAR_Seq_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 246              		.loc 1 298 0
 247 0122 5300     		lsl	r3, r2, #1
 248 0124 0024     		mov	r4, #0
 249 0126 2549     		ldr	r1, .L14+100
 250 0128 5C52     		strh	r4, [r3, r1]
 251 012a 03E0     		b	.L10
 252              	.L9:
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 253              		.loc 1 307 0
 254 012c 5300     		lsl	r3, r2, #1
 255 012e 0024     		mov	r4, #0
 256 0130 2249     		ldr	r1, .L14+100
 257 0132 5C52     		strh	r4, [r3, r1]
 258              	.L10:
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Calculate gain in counts per 10 volts with rounding */
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 11


 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_10MV_COUNTS) +
 259              		.loc 1 311 0 discriminator 2
 260 0134 224B     		ldr	r3, .L14+104
 261 0136 4343     		mul	r3, r0
 262 0138 8021     		mov	r1, #128
 263 013a C900     		lsl	r1, r1, #3
 264 013c 8C46     		mov	ip, r1
 265 013e 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 266              		.loc 1 312 0 discriminator 2
 267 0140 D917     		asr	r1, r3, #31
 268 0142 490D     		lsr	r1, r1, #21
 269 0144 CB18     		add	r3, r1, r3
 270 0146 DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 271              		.loc 1 311 0 discriminator 2
 272 0148 1BB2     		sxth	r3, r3
 273 014a 9000     		lsl	r0, r2, #2
 274              	.LVL24:
 275 014c 1D49     		ldr	r1, .L14+108
 276 014e 4350     		str	r3, [r0, r1]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 277              		.loc 1 232 0 discriminator 2
 278 0150 0132     		add	r2, r2, #1
 279              	.LVL25:
 280              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 281              		.loc 1 232 0 is_stmt 0 discriminator 1
 282 0152 012A     		cmp	r2, #1
 283 0154 98D9     		bls	.L11
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 284              		.loc 1 314 0 is_stmt 1
 285              		@ sp needed
 286 0156 10BD     		pop	{r4, pc}
 287              	.L15:
 288              		.align	2
 289              	.L14:
 290 0158 00000000 		.word	ADC_SAR_Seq_ISR
 291 015c 20001A40 		.word	1075445792
 292 0160 80031A40 		.word	1075446656
 293 0164 40201013 		.word	319823936
 294 0168 40200013 		.word	318775360
 295 016c 00001A40 		.word	1075445760
 296 0170 FC000080 		.word	-2147483396
 297 0174 04001A40 		.word	1075445764
 298 0178 0000FF0F 		.word	268369920
 299 017c 18001A40 		.word	1075445784
 300 0180 1C001A40 		.word	1075445788
 301 0184 04000400 		.word	262148
 302 0188 10001A40 		.word	1075445776
 303 018c 14001A40 		.word	1075445780
 304 0190 00031A40 		.word	1075446528
 305 0194 40031A40 		.word	1075446592
 306 0198 28021A40 		.word	1075446312
 307 019c 38021A40 		.word	1075446328
 308 01a0 18021A40 		.word	1075446296
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 12


 309 01a4 000F1A40 		.word	1075449600
 310 01a8 30001A40 		.word	1075445808
 311 01ac FFFFFFDF 		.word	-536870913
 312 01b0 00000000 		.word	.LANCHOR0
 313 01b4 80001A40 		.word	1075445888
 314 01b8 80021A40 		.word	1075446400
 315 01bc 00000000 		.word	ADC_SAR_Seq_offset
 316 01c0 10270000 		.word	10000
 317 01c4 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 318              		.cfi_endproc
 319              	.LFE1:
 320              		.size	ADC_SAR_Seq_Init, .-ADC_SAR_Seq_Init
 321              		.section	.text.ADC_SAR_Seq_Enable,"ax",%progbits
 322              		.align	2
 323              		.global	ADC_SAR_Seq_Enable
 324              		.code	16
 325              		.thumb_func
 326              		.type	ADC_SAR_Seq_Enable, %function
 327              	ADC_SAR_Seq_Enable:
 328              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 329              		.loc 1 331 0
 330              		.cfi_startproc
 331 0000 08B5     		push	{r3, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if (0u == (ADC_SAR_Seq_SAR_CTRL_REG & ADC_SAR_Seq_ENABLE))
 335              		.loc 1 332 0
 336 0002 074B     		ldr	r3, .L18
 337 0004 1B68     		ldr	r3, [r3]
 338 0006 002B     		cmp	r3, #0
 339 0008 08DB     		blt	.L16
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             while (0u != (ADC_SAR_Seq_SAR_STATUS_REG & ADC_SAR_Seq_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0) */
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 13


 341:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_ENABLE;
 340              		.loc 1 342 0
 341 000a 054A     		ldr	r2, .L18
 342 000c 1368     		ldr	r3, [r2]
 343 000e 8021     		mov	r1, #128
 344 0010 0906     		lsl	r1, r1, #24
 345 0012 0B43     		orr	r3, r1
 346 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyDelayUs(ADC_SAR_Seq_10US_DELAY);         
 347              		.loc 1 345 0
 348 0016 0A20     		mov	r0, #10
 349 0018 FFF7FEFF 		bl	CyDelayUs
 350              	.LVL26:
 351              	.L16:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 352              		.loc 1 347 0
 353              		@ sp needed
 354 001c 08BD     		pop	{r3, pc}
 355              	.L19:
 356 001e C046     		.align	2
 357              	.L18:
 358 0020 00001A40 		.word	1075445760
 359              		.cfi_endproc
 360              	.LFE2:
 361              		.size	ADC_SAR_Seq_Enable, .-ADC_SAR_Seq_Enable
 362              		.section	.text.ADC_SAR_Seq_Start,"ax",%progbits
 363              		.align	2
 364              		.global	ADC_SAR_Seq_Start
 365              		.code	16
 366              		.thumb_func
 367              		.type	ADC_SAR_Seq_Start, %function
 368              	ADC_SAR_Seq_Start:
 369              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* If not Initialized then initialize all required hardware and software */
 370              		.loc 1 64 0
 371              		.cfi_startproc
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 376              		.loc 1 66 0
 377 0002 064B     		ldr	r3, .L22
 378 0004 1B78     		ldrb	r3, [r3]
 379 0006 002B     		cmp	r3, #0
 380 0008 04D1     		bne	.L21
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_initVar = 1u;
 381              		.loc 1 68 0
 382 000a FFF7FEFF 		bl	ADC_SAR_Seq_Init
 383              	.LVL27:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 384              		.loc 1 69 0
 385 000e 0122     		mov	r2, #1
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 14


 386 0010 024B     		ldr	r3, .L22
 387 0012 1A70     		strb	r2, [r3]
 388              	.L21:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 389              		.loc 1 71 0
 390 0014 FFF7FEFF 		bl	ADC_SAR_Seq_Enable
 391              	.LVL28:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 392              		.loc 1 72 0
 393              		@ sp needed
 394 0018 08BD     		pop	{r3, pc}
 395              	.L23:
 396 001a C046     		.align	2
 397              	.L22:
 398 001c 00000000 		.word	.LANCHOR1
 399              		.cfi_endproc
 400              	.LFE0:
 401              		.size	ADC_SAR_Seq_Start, .-ADC_SAR_Seq_Start
 402              		.section	.text.ADC_SAR_Seq_Stop,"ax",%progbits
 403              		.align	2
 404              		.global	ADC_SAR_Seq_Stop
 405              		.code	16
 406              		.thumb_func
 407              		.type	ADC_SAR_Seq_Stop, %function
 408              	ADC_SAR_Seq_Stop:
 409              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 410              		.loc 1 366 0
 411              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_ENABLE;
 412              		.loc 1 367 0
 413 0000 024A     		ldr	r2, .L25
 414 0002 1368     		ldr	r3, [r2]
 415 0004 5B00     		lsl	r3, r3, #1
 416 0006 5B08     		lsr	r3, r3, #1
 417 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 418              		.loc 1 368 0
 419              		@ sp needed
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 15


 420 000a 7047     		bx	lr
 421              	.L26:
 422              		.align	2
 423              	.L25:
 424 000c 00001A40 		.word	1075445760
 425              		.cfi_endproc
 426              	.LFE3:
 427              		.size	ADC_SAR_Seq_Stop, .-ADC_SAR_Seq_Stop
 428              		.section	.text.ADC_SAR_Seq_StartConvert,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_SAR_Seq_StartConvert
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_SAR_Seq_StartConvert, %function
 434              	ADC_SAR_Seq_StartConvert:
 435              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 436              		.loc 1 392 0
 437              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_CONTINUOUS_EN;
 438              		.loc 1 394 0
 439 0000 034A     		ldr	r2, .L28
 440 0002 1368     		ldr	r3, [r2]
 441 0004 8021     		mov	r1, #128
 442 0006 4902     		lsl	r1, r1, #9
 443 0008 0B43     		orr	r3, r1
 444 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_START_CTRL_REG = ADC_SAR_Seq_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 445              		.loc 1 399 0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 16


 446              		@ sp needed
 447 000c 7047     		bx	lr
 448              	.L29:
 449 000e C046     		.align	2
 450              	.L28:
 451 0010 04001A40 		.word	1075445764
 452              		.cfi_endproc
 453              	.LFE4:
 454              		.size	ADC_SAR_Seq_StartConvert, .-ADC_SAR_Seq_StartConvert
 455              		.section	.text.ADC_SAR_Seq_StopConvert,"ax",%progbits
 456              		.align	2
 457              		.global	ADC_SAR_Seq_StopConvert
 458              		.code	16
 459              		.thumb_func
 460              		.type	ADC_SAR_Seq_StopConvert, %function
 461              	ADC_SAR_Seq_StopConvert:
 462              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 463              		.loc 1 417 0
 464              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_CONTINUOUS_EN);
 465              		.loc 1 419 0
 466 0000 024A     		ldr	r2, .L31
 467 0002 1168     		ldr	r1, [r2]
 468 0004 024B     		ldr	r3, .L31+4
 469 0006 0B40     		and	r3, r1
 470 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 471              		.loc 1 421 0
 472              		@ sp needed
 473 000a 7047     		bx	lr
 474              	.L32:
 475              		.align	2
 476              	.L31:
 477 000c 04001A40 		.word	1075445764
 478 0010 FFFFFEFF 		.word	-65537
 479              		.cfi_endproc
 480              	.LFE5:
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 17


 481              		.size	ADC_SAR_Seq_StopConvert, .-ADC_SAR_Seq_StopConvert
 482              		.section	.text.ADC_SAR_Seq_IsEndConversion,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_SAR_Seq_IsEndConversion
 485              		.code	16
 486              		.thumb_func
 487              		.type	ADC_SAR_Seq_IsEndConversion, %function
 488              	ADC_SAR_Seq_IsEndConversion:
 489              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint32 ADC_SAR_Seq_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 490              		.loc 1 451 0
 491              		.cfi_startproc
 492              	.LVL29:
 493 0000 011C     		mov	r1, r0
 494              	.LVL30:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if((retMode & (ADC_SAR_Seq_RETURN_STATUS | ADC_SAR_Seq_WAIT_FOR_RESULT)) != 0u)
 495              		.loc 1 454 0
 496 0002 8307     		lsl	r3, r0, #30
 497 0004 0CD0     		beq	.L40
 498              	.LVL31:
 499              	.L36:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             status = ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_EOS_MASK;
 500              		.loc 1 458 0 discriminator 2
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 18


 501 0006 104B     		ldr	r3, .L41
 502 0008 1B68     		ldr	r3, [r3]
 503 000a 0120     		mov	r0, #1
 504 000c 1840     		and	r0, r3
 505              	.LVL32:
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT) != 0u));
 506              		.loc 1 459 0 discriminator 2
 507 000e 01D1     		bne	.L35
 508              		.loc 1 459 0 is_stmt 0 discriminator 1
 509 0010 8B07     		lsl	r3, r1, #30
 510 0012 F8D4     		bmi	.L36
 511              	.L35:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(status != 0u)
 512              		.loc 1 461 0 is_stmt 1
 513 0014 0028     		cmp	r0, #0
 514 0016 04D0     		beq	.L34
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_EOS_MASK;
 515              		.loc 1 464 0
 516 0018 0122     		mov	r2, #1
 517 001a 0B4B     		ldr	r3, .L41
 518 001c 1A60     		str	r2, [r3]
 519 001e 00E0     		b	.L34
 520              	.LVL33:
 521              	.L40:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 522              		.loc 1 452 0
 523 0020 0020     		mov	r0, #0
 524              	.LVL34:
 525              	.L34:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((retMode & (ADC_SAR_Seq_RETURN_STATUS_INJ | ADC_SAR_Seq_WAIT_FOR_RESULT_INJ)) != 0u)
 526              		.loc 1 469 0
 527 0022 0C23     		mov	r3, #12
 528 0024 0B42     		tst	r3, r1
 529 0026 0DD0     		beq	.L37
 530              	.L39:
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 status |= ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_INJ_EOC_MASK;
 531              		.loc 1 473 0
 532 0028 074B     		ldr	r3, .L41
 533 002a 1A68     		ldr	r2, [r3]
 534 002c 1023     		mov	r3, #16
 535 002e 1A40     		and	r2, r3
 536 0030 1043     		orr	r0, r2
 537              	.LVL35:
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }while(((status & ADC_SAR_Seq_INJ_EOC_MASK) == 0u) &&
 538              		.loc 1 474 0
 539 0032 0340     		and	r3, r0
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT_INJ) != 0u));
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 19


 540              		.loc 1 475 0
 541 0034 01D1     		bne	.L38
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }while(((status & ADC_SAR_Seq_INJ_EOC_MASK) == 0u) &&
 542              		.loc 1 474 0 discriminator 1
 543 0036 0A07     		lsl	r2, r1, #28
 544 0038 F6D4     		bmi	.L39
 545              	.L38:
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((status & ADC_SAR_Seq_INJ_EOC_MASK) != 0u)
 546              		.loc 1 477 0
 547 003a 002B     		cmp	r3, #0
 548 003c 02D0     		beq	.L37
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_INJ_EOC_MASK;
 549              		.loc 1 480 0
 550 003e 1022     		mov	r2, #16
 551 0040 014B     		ldr	r3, .L41
 552 0042 1A60     		str	r2, [r3]
 553              	.L37:
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 554              		.loc 1 486 0
 555              		@ sp needed
 556 0044 7047     		bx	lr
 557              	.L42:
 558 0046 C046     		.align	2
 559              	.L41:
 560 0048 10021A40 		.word	1075446288
 561              		.cfi_endproc
 562              	.LFE6:
 563              		.size	ADC_SAR_Seq_IsEndConversion, .-ADC_SAR_Seq_IsEndConversion
 564              		.section	.text.ADC_SAR_Seq_GetResult16,"ax",%progbits
 565              		.align	2
 566              		.global	ADC_SAR_Seq_GetResult16
 567              		.code	16
 568              		.thumb_func
 569              		.type	ADC_SAR_Seq_GetResult16, %function
 570              	ADC_SAR_Seq_GetResult16:
 571              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 20


 500:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** int16 ADC_SAR_Seq_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 572              		.loc 1 505 0
 573              		.cfi_startproc
 574              	.LVL36:
 575 0000 10B5     		push	{r4, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 579 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 580              		.loc 1 509 0
 581 0004 012C     		cmp	r4, #1
 582 0006 02D9     		bls	.L44
 583              		.loc 1 509 0 is_stmt 0 discriminator 1
 584 0008 0020     		mov	r0, #0
 585              	.LVL37:
 586 000a FFF7FEFF 		bl	CyHalt
 587              	.LVL38:
 588              	.L44:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(chan < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 589              		.loc 1 511 0 is_stmt 1
 590 000e 002C     		cmp	r4, #0
 591 0010 07D1     		bne	.L45
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 592              		.loc 1 513 0
 593 0012 A400     		lsl	r4, r4, #2
 594              	.LVL39:
 595 0014 064B     		ldr	r3, .L47
 596 0016 9C46     		mov	ip, r3
 597 0018 6444     		add	r4, r4, ip
 598 001a 2068     		ldr	r0, [r4]
 599 001c 0004     		lsl	r0, r0, #16
 600 001e 000C     		lsr	r0, r0, #16
 601              	.LVL40:
 602 0020 03E0     		b	.L46
 603              	.LVL41:
 604              	.L45:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = ADC_SAR_Seq_SAR_INJ_RESULT_REG & ADC_SAR_Seq_RESULT_MASK;
 605              		.loc 1 519 0
 606 0022 044B     		ldr	r3, .L47+4
 607 0024 1868     		ldr	r0, [r3]
 608 0026 0004     		lsl	r0, r0, #16
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 21


 609 0028 000C     		lsr	r0, r0, #16
 610              	.LVL42:
 611              	.L46:
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return ( (int16)result );
 612              		.loc 1 525 0
 613 002a 00B2     		sxth	r0, r0
 614              	.LVL43:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 615              		.loc 1 526 0
 616              		@ sp needed
 617 002c 10BD     		pop	{r4, pc}
 618              	.L48:
 619 002e C046     		.align	2
 620              	.L47:
 621 0030 80011A40 		.word	1075446144
 622 0034 90021A40 		.word	1075446416
 623              		.cfi_endproc
 624              	.LFE7:
 625              		.size	ADC_SAR_Seq_GetResult16, .-ADC_SAR_Seq_GetResult16
 626              		.section	.text.ADC_SAR_Seq_SetChanMask,"ax",%progbits
 627              		.align	2
 628              		.global	ADC_SAR_Seq_SetChanMask
 629              		.code	16
 630              		.thumb_func
 631              		.type	ADC_SAR_Seq_SetChanMask, %function
 632              	ADC_SAR_Seq_SetChanMask:
 633              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 634              		.loc 1 550 0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 22


 635              		.cfi_startproc
 636              	.LVL44:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 637              		.loc 1 551 0
 638 0000 0123     		mov	r3, #1
 639 0002 1840     		and	r0, r3
 640              	.LVL45:
 641 0004 014B     		ldr	r3, .L50
 642 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 643              		.loc 1 552 0
 644              		@ sp needed
 645 0008 7047     		bx	lr
 646              	.L51:
 647 000a C046     		.align	2
 648              	.L50:
 649 000c 20001A40 		.word	1075445792
 650              		.cfi_endproc
 651              	.LFE8:
 652              		.size	ADC_SAR_Seq_SetChanMask, .-ADC_SAR_Seq_SetChanMask
 653              		.section	.text.ADC_SAR_Seq_EnableInjection,"ax",%progbits
 654              		.align	2
 655              		.global	ADC_SAR_Seq_EnableInjection
 656              		.code	16
 657              		.thumb_func
 658              		.type	ADC_SAR_Seq_EnableInjection, %function
 659              	ADC_SAR_Seq_EnableInjection:
 660              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     void ADC_SAR_Seq_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 661              		.loc 1 572 0
 662              		.cfi_startproc
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_INJ_CHAN_EN;
 663              		.loc 1 573 0
 664 0000 034A     		ldr	r2, .L53
 665 0002 1368     		ldr	r3, [r2]
 666 0004 8021     		mov	r1, #128
 667 0006 0906     		lsl	r1, r1, #24
 668 0008 0B43     		orr	r3, r1
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 23


 669 000a 1360     		str	r3, [r2]
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 670              		.loc 1 574 0
 671              		@ sp needed
 672 000c 7047     		bx	lr
 673              	.L54:
 674 000e C046     		.align	2
 675              	.L53:
 676 0010 80021A40 		.word	1075446400
 677              		.cfi_endproc
 678              	.LFE9:
 679              		.size	ADC_SAR_Seq_EnableInjection, .-ADC_SAR_Seq_EnableInjection
 680              		.section	.text.ADC_SAR_Seq_SetLowLimit,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SAR_Seq_SetLowLimit
 683              		.code	16
 684              		.thumb_func
 685              		.type	ADC_SAR_Seq_SetLowLimit, %function
 686              	ADC_SAR_Seq_SetLowLimit:
 687              	.LFB10:
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 688              		.loc 1 594 0
 689              		.cfi_startproc
 690              	.LVL46:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_LOW_MASK);
 691              		.loc 1 595 0
 692 0000 054A     		ldr	r2, .L56
 693 0002 1368     		ldr	r3, [r2]
 694 0004 1B0C     		lsr	r3, r3, #16
 695 0006 1B04     		lsl	r3, r3, #16
 696 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_RANGE_LOW_MASK;
 697              		.loc 1 596 0
 698 000a 1368     		ldr	r3, [r2]
 699 000c 0004     		lsl	r0, r0, #16
 700              	.LVL47:
 701 000e 000C     		lsr	r0, r0, #16
 702 0010 1843     		orr	r0, r3
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 24


 703 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 704              		.loc 1 597 0
 705              		@ sp needed
 706 0014 7047     		bx	lr
 707              	.L57:
 708 0016 C046     		.align	2
 709              	.L56:
 710 0018 18001A40 		.word	1075445784
 711              		.cfi_endproc
 712              	.LFE10:
 713              		.size	ADC_SAR_Seq_SetLowLimit, .-ADC_SAR_Seq_SetLowLimit
 714              		.section	.text.ADC_SAR_Seq_SetHighLimit,"ax",%progbits
 715              		.align	2
 716              		.global	ADC_SAR_Seq_SetHighLimit
 717              		.code	16
 718              		.thumb_func
 719              		.type	ADC_SAR_Seq_SetHighLimit, %function
 720              	ADC_SAR_Seq_SetHighLimit:
 721              	.LFB11:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 722              		.loc 1 615 0
 723              		.cfi_startproc
 724              	.LVL48:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_HIGH_MASK);
 725              		.loc 1 616 0
 726 0000 044A     		ldr	r2, .L59
 727 0002 1368     		ldr	r3, [r2]
 728 0004 1B04     		lsl	r3, r3, #16
 729 0006 1B0C     		lsr	r3, r3, #16
 730 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_RANGE_HIGH_OFFSET);
 731              		.loc 1 617 0
 732 000a 1368     		ldr	r3, [r2]
 733 000c 0004     		lsl	r0, r0, #16
 734              	.LVL49:
 735 000e 1843     		orr	r0, r3
 736 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 737              		.loc 1 618 0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 25


 738              		@ sp needed
 739 0012 7047     		bx	lr
 740              	.L60:
 741              		.align	2
 742              	.L59:
 743 0014 18001A40 		.word	1075445784
 744              		.cfi_endproc
 745              	.LFE11:
 746              		.size	ADC_SAR_Seq_SetHighLimit, .-ADC_SAR_Seq_SetHighLimit
 747              		.section	.text.ADC_SAR_Seq_SetLimitMask,"ax",%progbits
 748              		.align	2
 749              		.global	ADC_SAR_Seq_SetLimitMask
 750              		.code	16
 751              		.thumb_func
 752              		.type	ADC_SAR_Seq_SetLimitMask, %function
 753              	ADC_SAR_Seq_SetLimitMask:
 754              	.LFB12:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 755              		.loc 1 639 0
 756              		.cfi_startproc
 757              	.LVL50:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 758              		.loc 1 640 0
 759 0000 0123     		mov	r3, #1
 760 0002 1840     		and	r0, r3
 761              	.LVL51:
 762 0004 014B     		ldr	r3, .L62
 763 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 764              		.loc 1 641 0
 765              		@ sp needed
 766 0008 7047     		bx	lr
 767              	.L63:
 768 000a C046     		.align	2
 769              	.L62:
 770 000c 38021A40 		.word	1075446328
 771              		.cfi_endproc
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 26


 772              	.LFE12:
 773              		.size	ADC_SAR_Seq_SetLimitMask, .-ADC_SAR_Seq_SetLimitMask
 774              		.section	.text.ADC_SAR_Seq_SetSatMask,"ax",%progbits
 775              		.align	2
 776              		.global	ADC_SAR_Seq_SetSatMask
 777              		.code	16
 778              		.thumb_func
 779              		.type	ADC_SAR_Seq_SetSatMask, %function
 780              	ADC_SAR_Seq_SetSatMask:
 781              	.LFB13:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 782              		.loc 1 662 0
 783              		.cfi_startproc
 784              	.LVL52:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 785              		.loc 1 663 0
 786 0000 0123     		mov	r3, #1
 787 0002 1840     		and	r0, r3
 788              	.LVL53:
 789 0004 014B     		ldr	r3, .L65
 790 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 791              		.loc 1 664 0
 792              		@ sp needed
 793 0008 7047     		bx	lr
 794              	.L66:
 795 000a C046     		.align	2
 796              	.L65:
 797 000c 28021A40 		.word	1075446312
 798              		.cfi_endproc
 799              	.LFE13:
 800              		.size	ADC_SAR_Seq_SetSatMask, .-ADC_SAR_Seq_SetSatMask
 801              		.section	.text.ADC_SAR_Seq_SetOffset,"ax",%progbits
 802              		.align	2
 803              		.global	ADC_SAR_Seq_SetOffset
 804              		.code	16
 805              		.thumb_func
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 27


 806              		.type	ADC_SAR_Seq_SetOffset, %function
 807              	ADC_SAR_Seq_SetOffset:
 808              	.LFB14:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 809              		.loc 1 690 0
 810              		.cfi_startproc
 811              	.LVL54:
 812 0000 38B5     		push	{r3, r4, r5, lr}
 813              		.cfi_def_cfa_offset 16
 814              		.cfi_offset 3, -16
 815              		.cfi_offset 4, -12
 816              		.cfi_offset 5, -8
 817              		.cfi_offset 14, -4
 818 0002 041C     		mov	r4, r0
 819 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 820              		.loc 1 692 0
 821 0006 0128     		cmp	r0, #1
 822 0008 02D9     		bls	.L68
 823              		.loc 1 692 0 is_stmt 0 discriminator 1
 824 000a 0020     		mov	r0, #0
 825              	.LVL55:
 826 000c FFF7FEFF 		bl	CyHalt
 827              	.LVL56:
 828              	.L68:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_offset[chan] = offset;
 829              		.loc 1 694 0 is_stmt 1
 830 0010 6400     		lsl	r4, r4, #1
 831              	.LVL57:
 832 0012 014B     		ldr	r3, .L69
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 28


 833 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 834              		.loc 1 695 0
 835              		@ sp needed
 836 0016 38BD     		pop	{r3, r4, r5, pc}
 837              	.L70:
 838              		.align	2
 839              	.L69:
 840 0018 00000000 		.word	ADC_SAR_Seq_offset
 841              		.cfi_endproc
 842              	.LFE14:
 843              		.size	ADC_SAR_Seq_SetOffset, .-ADC_SAR_Seq_SetOffset
 844              		.section	.text.ADC_SAR_Seq_SetGain,"ax",%progbits
 845              		.align	2
 846              		.global	ADC_SAR_Seq_SetGain
 847              		.code	16
 848              		.thumb_func
 849              		.type	ADC_SAR_Seq_SetGain, %function
 850              	ADC_SAR_Seq_SetGain:
 851              	.LFB15:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 852              		.loc 1 724 0
 853              		.cfi_startproc
 854              	.LVL58:
 855 0000 38B5     		push	{r3, r4, r5, lr}
 856              		.cfi_def_cfa_offset 16
 857              		.cfi_offset 3, -16
 858              		.cfi_offset 4, -12
 859              		.cfi_offset 5, -8
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 29


 860              		.cfi_offset 14, -4
 861 0002 041C     		mov	r4, r0
 862 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 863              		.loc 1 726 0
 864 0006 0128     		cmp	r0, #1
 865 0008 02D9     		bls	.L72
 866              		.loc 1 726 0 is_stmt 0 discriminator 1
 867 000a 0020     		mov	r0, #0
 868              	.LVL59:
 869 000c FFF7FEFF 		bl	CyHalt
 870              	.LVL60:
 871              	.L72:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_countsPer10Volt[chan] = adcGain;
 872              		.loc 1 728 0 is_stmt 1
 873 0010 A400     		lsl	r4, r4, #2
 874              	.LVL61:
 875 0012 014B     		ldr	r3, .L73
 876 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 877              		.loc 1 729 0
 878              		@ sp needed
 879              	.LVL62:
 880 0016 38BD     		pop	{r3, r4, r5, pc}
 881              	.L74:
 882              		.align	2
 883              	.L73:
 884 0018 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 885              		.cfi_endproc
 886              	.LFE15:
 887              		.size	ADC_SAR_Seq_SetGain, .-ADC_SAR_Seq_SetGain
 888              		.global	__aeabi_idiv
 889              		.section	.text.ADC_SAR_Seq_CountsTo_mVolts,"ax",%progbits
 890              		.align	2
 891              		.global	ADC_SAR_Seq_CountsTo_mVolts
 892              		.code	16
 893              		.thumb_func
 894              		.type	ADC_SAR_Seq_CountsTo_mVolts, %function
 895              	ADC_SAR_Seq_CountsTo_mVolts:
 896              	.LFB16:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 30


 745:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int16 ADC_SAR_Seq_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 897              		.loc 1 757 0
 898              		.cfi_startproc
 899              	.LVL63:
 900 0000 38B5     		push	{r3, r4, r5, lr}
 901              		.cfi_def_cfa_offset 16
 902              		.cfi_offset 3, -16
 903              		.cfi_offset 4, -12
 904              		.cfi_offset 5, -8
 905              		.cfi_offset 14, -4
 906 0002 041C     		mov	r4, r0
 907 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 908              		.loc 1 761 0
 909 0006 0128     		cmp	r0, #1
 910 0008 02D9     		bls	.L76
 911              		.loc 1 761 0 is_stmt 0 discriminator 1
 912 000a 0020     		mov	r0, #0
 913              	.LVL64:
 914 000c FFF7FEFF 		bl	CyHalt
 915              	.LVL65:
 916              	.L76:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 917              		.loc 1 772 0 is_stmt 1
 918 0010 6300     		lsl	r3, r4, #1
 919 0012 0F4A     		ldr	r2, .L79
 920 0014 995A     		ldrh	r1, [r3, r2]
 921 0016 691A     		sub	r1, r5, r1
 922 0018 09B2     		sxth	r1, r1
 923              	.LVL66:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_10MV_COUNTS) + ( (adcCounts > 0) ?
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 31


 924              		.loc 1 774 0
 925 001a 0E48     		ldr	r0, .L79+4
 926 001c 021C     		mov	r2, r0
 927 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 928              		.loc 1 775 0
 929 0020 0029     		cmp	r1, #0
 930 0022 06DD     		ble	.L77
 931              		.loc 1 775 0 is_stmt 0 discriminator 1
 932 0024 A300     		lsl	r3, r4, #2
 933 0026 0C49     		ldr	r1, .L79+8
 934              	.LVL67:
 935 0028 5B58     		ldr	r3, [r3, r1]
 936 002a D80F     		lsr	r0, r3, #31
 937 002c C018     		add	r0, r0, r3
 938 002e 4310     		asr	r3, r0, #1
 939 0030 06E0     		b	.L78
 940              	.LVL68:
 941              	.L77:
 942              		.loc 1 775 0 discriminator 2
 943 0032 A300     		lsl	r3, r4, #2
 944 0034 0849     		ldr	r1, .L79+8
 945              	.LVL69:
 946 0036 5B58     		ldr	r3, [r3, r1]
 947 0038 D80F     		lsr	r0, r3, #31
 948 003a C318     		add	r3, r0, r3
 949 003c 5B10     		asr	r3, r3, #1
 950 003e 5B42     		neg	r3, r3
 951              	.L78:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 952              		.loc 1 774 0 is_stmt 1
 953 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  / ADC_SAR_Seq_countsPer10Volt[chan]);
 954              		.loc 1 776 0
 955 0042 A400     		lsl	r4, r4, #2
 956              	.LVL70:
 957 0044 044B     		ldr	r3, .L79+8
 958 0046 E158     		ldr	r1, [r4, r3]
 959 0048 FFF7FEFF 		bl	__aeabi_idiv
 960              	.LVL71:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( mVolts );
 961              		.loc 1 778 0
 962 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 963              		.loc 1 779 0
 964              		@ sp needed
 965 004e 38BD     		pop	{r3, r4, r5, pc}
 966              	.L80:
 967              		.align	2
 968              	.L79:
 969 0050 00000000 		.word	ADC_SAR_Seq_offset
 970 0054 10270000 		.word	10000
 971 0058 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 972              		.cfi_endproc
 973              	.LFE16:
 974              		.size	ADC_SAR_Seq_CountsTo_mVolts, .-ADC_SAR_Seq_CountsTo_mVolts
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 32


 975              		.global	__aeabi_lmul
 976              		.global	__aeabi_ldivmod
 977              		.section	.text.ADC_SAR_Seq_CountsTo_uVolts,"ax",%progbits
 978              		.align	2
 979              		.global	ADC_SAR_Seq_CountsTo_uVolts
 980              		.code	16
 981              		.thumb_func
 982              		.type	ADC_SAR_Seq_CountsTo_uVolts, %function
 983              	ADC_SAR_Seq_CountsTo_uVolts:
 984              	.LFB17:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 ADC_SAR_Seq_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 985              		.loc 1 811 0
 986              		.cfi_startproc
 987              	.LVL72:
 988 0000 38B5     		push	{r3, r4, r5, lr}
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 3, -16
 991              		.cfi_offset 4, -12
 992              		.cfi_offset 5, -8
 993              		.cfi_offset 14, -4
 994 0002 051C     		mov	r5, r0
 995 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 33


 996              		.loc 1 815 0
 997 0006 0128     		cmp	r0, #1
 998 0008 02D9     		bls	.L82
 999              		.loc 1 815 0 is_stmt 0 discriminator 1
 1000 000a 0020     		mov	r0, #0
 1001              	.LVL73:
 1002 000c FFF7FEFF 		bl	CyHalt
 1003              	.LVL74:
 1004              	.L82:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1005              		.loc 1 826 0 is_stmt 1
 1006 0010 6A00     		lsl	r2, r5, #1
 1007 0012 084B     		ldr	r3, .L83
 1008 0014 D05A     		ldrh	r0, [r2, r3]
 1009 0016 201A     		sub	r0, r4, r0
 1010 0018 00B2     		sxth	r0, r0
 1011              	.LVL75:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_10UV_COUNTS) / ADC_SAR_Seq_countsPer10Volt[chan];
 1012              		.loc 1 828 0
 1013 001a C117     		asr	r1, r0, #31
 1014 001c 064A     		ldr	r2, .L83+4
 1015 001e 0023     		mov	r3, #0
 1016 0020 FFF7FEFF 		bl	__aeabi_lmul
 1017              	.LVL76:
 1018 0024 AD00     		lsl	r5, r5, #2
 1019              	.LVL77:
 1020 0026 054B     		ldr	r3, .L83+8
 1021 0028 EA58     		ldr	r2, [r5, r3]
 1022 002a D317     		asr	r3, r2, #31
 1023 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1024              	.LVL78:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1025              		.loc 1 831 0
 1026              		@ sp needed
 1027 0030 38BD     		pop	{r3, r4, r5, pc}
 1028              	.L84:
 1029 0032 C046     		.align	2
 1030              	.L83:
 1031 0034 00000000 		.word	ADC_SAR_Seq_offset
 1032 0038 80969800 		.word	10000000
 1033 003c 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1034              		.cfi_endproc
 1035              	.LFE17:
 1036              		.size	ADC_SAR_Seq_CountsTo_uVolts, .-ADC_SAR_Seq_CountsTo_uVolts
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 34


 1037              		.global	__aeabi_i2f
 1038              		.global	__aeabi_fmul
 1039              		.global	__aeabi_fdiv
 1040              		.section	.text.ADC_SAR_Seq_CountsTo_Volts,"ax",%progbits
 1041              		.align	2
 1042              		.global	ADC_SAR_Seq_CountsTo_Volts
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	ADC_SAR_Seq_CountsTo_Volts, %function
 1046              	ADC_SAR_Seq_CountsTo_Volts:
 1047              	.LFB18:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     float32 ADC_SAR_Seq_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1048              		.loc 1 856 0
 1049              		.cfi_startproc
 1050              	.LVL79:
 1051 0000 38B5     		push	{r3, r4, r5, lr}
 1052              		.cfi_def_cfa_offset 16
 1053              		.cfi_offset 3, -16
 1054              		.cfi_offset 4, -12
 1055              		.cfi_offset 5, -8
 1056              		.cfi_offset 14, -4
 1057 0002 041C     		mov	r4, r0
 1058 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 1059              		.loc 1 860 0
 1060 0006 0128     		cmp	r0, #1
 1061 0008 02D9     		bls	.L86
 1062              		.loc 1 860 0 is_stmt 0 discriminator 1
 1063 000a 0020     		mov	r0, #0
 1064              	.LVL80:
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 35


 1065 000c FFF7FEFF 		bl	CyHalt
 1066              	.LVL81:
 1067              	.L86:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1068              		.loc 1 871 0 is_stmt 1
 1069 0010 6200     		lsl	r2, r4, #1
 1070 0012 0A4B     		ldr	r3, .L87
 1071 0014 D05A     		ldrh	r0, [r2, r3]
 1072 0016 281A     		sub	r0, r5, r0
 1073 0018 00B2     		sxth	r0, r0
 1074              	.LVL82:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_10V_COUNTS) / (float32)ADC_SAR_Seq_countsPer10Vol
 1075              		.loc 1 873 0
 1076 001a FFF7FEFF 		bl	__aeabi_i2f
 1077              	.LVL83:
 1078 001e 0849     		ldr	r1, .L87+4
 1079 0020 FFF7FEFF 		bl	__aeabi_fmul
 1080              	.LVL84:
 1081 0024 051C     		add	r5, r0, #0
 1082 0026 A400     		lsl	r4, r4, #2
 1083              	.LVL85:
 1084 0028 064B     		ldr	r3, .L87+8
 1085 002a E058     		ldr	r0, [r4, r3]
 1086 002c FFF7FEFF 		bl	__aeabi_i2f
 1087              	.LVL86:
 1088 0030 011C     		add	r1, r0, #0
 1089 0032 281C     		add	r0, r5, #0
 1090 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1091              	.LVL87:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1092              		.loc 1 876 0
 1093              		@ sp needed
 1094 0038 38BD     		pop	{r3, r4, r5, pc}
 1095              	.L88:
 1096 003a C046     		.align	2
 1097              	.L87:
 1098 003c 00000000 		.word	ADC_SAR_Seq_offset
 1099 0040 00002041 		.word	1092616192
 1100 0044 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1101              		.cfi_endproc
 1102              	.LFE18:
 1103              		.size	ADC_SAR_Seq_CountsTo_Volts, .-ADC_SAR_Seq_CountsTo_Volts
 1104              		.comm	ADC_SAR_Seq_countsPer10Volt,8,4
 1105              		.comm	ADC_SAR_Seq_offset,4,4
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 36


 1106              		.global	ADC_SAR_Seq_initVar
 1107              		.section	.rodata
 1108              		.align	2
 1109              		.set	.LANCHOR0,. + 0
 1110              		.type	ADC_SAR_Seq_channelsConfig, %object
 1111              		.size	ADC_SAR_Seq_channelsConfig, 8
 1112              	ADC_SAR_Seq_channelsConfig:
 1113 0000 00040000 		.word	1024
 1114 0004 00040000 		.word	1024
 1115              		.type	ADC_SAR_Seq_InputsPlacement.4742, %object
 1116              		.size	ADC_SAR_Seq_InputsPlacement.4742, 2
 1117              	ADC_SAR_Seq_InputsPlacement.4742:
 1118 0008 73       		.byte	115
 1119 0009 70       		.byte	112
 1120 000a 0000     		.bss
 1121              		.set	.LANCHOR1,. + 0
 1122              		.type	ADC_SAR_Seq_initVar, %object
 1123              		.size	ADC_SAR_Seq_initVar, 1
 1124              	ADC_SAR_Seq_initVar:
 1125 0000 00       		.space	1
 1126              		.text
 1127              	.Letext0:
 1128              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1129              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1130              		.section	.debug_info,"",%progbits
 1131              	.Ldebug_info0:
 1132 0000 C6050000 		.4byte	0x5c6
 1133 0004 0400     		.2byte	0x4
 1134 0006 00000000 		.4byte	.Ldebug_abbrev0
 1135 000a 04       		.byte	0x4
 1136 000b 01       		.uleb128 0x1
 1137 000c 86020000 		.4byte	.LASF63
 1138 0010 01       		.byte	0x1
 1139 0011 01040000 		.4byte	.LASF64
 1140 0015 7F010000 		.4byte	.LASF65
 1141 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1142 001d 00000000 		.4byte	0
 1143 0021 00000000 		.4byte	.Ldebug_line0
 1144 0025 02       		.uleb128 0x2
 1145 0026 01       		.byte	0x1
 1146 0027 06       		.byte	0x6
 1147 0028 DA000000 		.4byte	.LASF0
 1148 002c 02       		.uleb128 0x2
 1149 002d 01       		.byte	0x1
 1150 002e 08       		.byte	0x8
 1151 002f 76030000 		.4byte	.LASF1
 1152 0033 02       		.uleb128 0x2
 1153 0034 02       		.byte	0x2
 1154 0035 05       		.byte	0x5
 1155 0036 84030000 		.4byte	.LASF2
 1156 003a 02       		.uleb128 0x2
 1157 003b 02       		.byte	0x2
 1158 003c 07       		.byte	0x7
 1159 003d DE010000 		.4byte	.LASF3
 1160 0041 02       		.uleb128 0x2
 1161 0042 04       		.byte	0x4
 1162 0043 05       		.byte	0x5
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 37


 1163 0044 EC000000 		.4byte	.LASF4
 1164 0048 02       		.uleb128 0x2
 1165 0049 04       		.byte	0x4
 1166 004a 07       		.byte	0x7
 1167 004b 5D010000 		.4byte	.LASF5
 1168 004f 02       		.uleb128 0x2
 1169 0050 08       		.byte	0x8
 1170 0051 05       		.byte	0x5
 1171 0052 CC000000 		.4byte	.LASF6
 1172 0056 02       		.uleb128 0x2
 1173 0057 08       		.byte	0x8
 1174 0058 07       		.byte	0x7
 1175 0059 99000000 		.4byte	.LASF7
 1176 005d 03       		.uleb128 0x3
 1177 005e 04       		.byte	0x4
 1178 005f 05       		.byte	0x5
 1179 0060 696E7400 		.ascii	"int\000"
 1180 0064 02       		.uleb128 0x2
 1181 0065 04       		.byte	0x4
 1182 0066 07       		.byte	0x7
 1183 0067 31010000 		.4byte	.LASF8
 1184 006b 04       		.uleb128 0x4
 1185 006c F5000000 		.4byte	.LASF9
 1186 0070 02       		.byte	0x2
 1187 0071 C2       		.byte	0xc2
 1188 0072 2C000000 		.4byte	0x2c
 1189 0076 04       		.uleb128 0x4
 1190 0077 1B000000 		.4byte	.LASF10
 1191 007b 02       		.byte	0x2
 1192 007c C3       		.byte	0xc3
 1193 007d 3A000000 		.4byte	0x3a
 1194 0081 04       		.uleb128 0x4
 1195 0082 0C010000 		.4byte	.LASF11
 1196 0086 02       		.byte	0x2
 1197 0087 C4       		.byte	0xc4
 1198 0088 48000000 		.4byte	0x48
 1199 008c 04       		.uleb128 0x4
 1200 008d 64040000 		.4byte	.LASF12
 1201 0091 02       		.byte	0x2
 1202 0092 C6       		.byte	0xc6
 1203 0093 33000000 		.4byte	0x33
 1204 0097 04       		.uleb128 0x4
 1205 0098 E6000000 		.4byte	.LASF13
 1206 009c 02       		.byte	0x2
 1207 009d C7       		.byte	0xc7
 1208 009e 41000000 		.4byte	0x41
 1209 00a2 04       		.uleb128 0x4
 1210 00a3 53020000 		.4byte	.LASF14
 1211 00a7 02       		.byte	0x2
 1212 00a8 C8       		.byte	0xc8
 1213 00a9 AD000000 		.4byte	0xad
 1214 00ad 02       		.uleb128 0x2
 1215 00ae 04       		.byte	0x4
 1216 00af 04       		.byte	0x4
 1217 00b0 2B030000 		.4byte	.LASF15
 1218 00b4 02       		.uleb128 0x2
 1219 00b5 08       		.byte	0x8
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 38


 1220 00b6 04       		.byte	0x4
 1221 00b7 05010000 		.4byte	.LASF16
 1222 00bb 04       		.uleb128 0x4
 1223 00bc 14030000 		.4byte	.LASF17
 1224 00c0 02       		.byte	0x2
 1225 00c1 CD       		.byte	0xcd
 1226 00c2 4F000000 		.4byte	0x4f
 1227 00c6 02       		.uleb128 0x2
 1228 00c7 01       		.byte	0x1
 1229 00c8 08       		.byte	0x8
 1230 00c9 EF030000 		.4byte	.LASF18
 1231 00cd 05       		.uleb128 0x5
 1232 00ce 32020000 		.4byte	.LASF19
 1233 00d2 02       		.byte	0x2
 1234 00d3 6E01     		.2byte	0x16e
 1235 00d5 D9000000 		.4byte	0xd9
 1236 00d9 06       		.uleb128 0x6
 1237 00da 81000000 		.4byte	0x81
 1238 00de 05       		.uleb128 0x5
 1239 00df F4030000 		.4byte	.LASF20
 1240 00e3 02       		.byte	0x2
 1241 00e4 7E01     		.2byte	0x17e
 1242 00e6 EA000000 		.4byte	0xea
 1243 00ea 07       		.uleb128 0x7
 1244 00eb 04       		.byte	0x4
 1245 00ec F0000000 		.4byte	0xf0
 1246 00f0 08       		.uleb128 0x8
 1247 00f1 02       		.uleb128 0x2
 1248 00f2 04       		.byte	0x4
 1249 00f3 07       		.byte	0x7
 1250 00f4 5B020000 		.4byte	.LASF21
 1251 00f8 09       		.uleb128 0x9
 1252 00f9 13010000 		.4byte	.LASF26
 1253 00fd 01       		.byte	0x1
 1254 00fe 5E       		.byte	0x5e
 1255 00ff 00000000 		.4byte	.LFB1
 1256 0103 C8010000 		.4byte	.LFE1-.LFB1
 1257 0107 01       		.uleb128 0x1
 1258 0108 9C       		.byte	0x9c
 1259 0109 73010000 		.4byte	0x173
 1260 010d 0A       		.uleb128 0xa
 1261 010e B7030000 		.4byte	.LASF22
 1262 0112 01       		.byte	0x1
 1263 0113 60       		.byte	0x60
 1264 0114 81000000 		.4byte	0x81
 1265 0118 00000000 		.4byte	.LLST0
 1266 011c 0A       		.uleb128 0xa
 1267 011d 75010000 		.4byte	.LASF23
 1268 0121 01       		.byte	0x1
 1269 0122 61       		.byte	0x61
 1270 0123 81000000 		.4byte	0x81
 1271 0127 1F000000 		.4byte	.LLST1
 1272 012b 0A       		.uleb128 0xa
 1273 012c 46000000 		.4byte	.LASF24
 1274 0130 01       		.byte	0x1
 1275 0131 62       		.byte	0x62
 1276 0132 97000000 		.4byte	0x97
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 39


 1277 0136 00020000 		.4byte	.LLST2
 1278 013a 0B       		.uleb128 0xb
 1279 013b 31030000 		.4byte	.LASF25
 1280 013f 01       		.byte	0x1
 1281 0140 65       		.byte	0x65
 1282 0141 83010000 		.4byte	0x183
 1283 0145 05       		.uleb128 0x5
 1284 0146 03       		.byte	0x3
 1285 0147 08000000 		.4byte	ADC_SAR_Seq_InputsPlacement.4742
 1286 014b 0C       		.uleb128 0xc
 1287 014c 0A000000 		.4byte	.LVL0
 1288 0150 7B050000 		.4byte	0x57b
 1289 0154 63010000 		.4byte	0x163
 1290 0158 0D       		.uleb128 0xd
 1291 0159 01       		.uleb128 0x1
 1292 015a 51       		.byte	0x51
 1293 015b 01       		.uleb128 0x1
 1294 015c 33       		.byte	0x33
 1295 015d 0D       		.uleb128 0xd
 1296 015e 01       		.uleb128 0x1
 1297 015f 50       		.byte	0x50
 1298 0160 01       		.uleb128 0x1
 1299 0161 3E       		.byte	0x3e
 1300 0162 00       		.byte	0
 1301 0163 0E       		.uleb128 0xe
 1302 0164 12000000 		.4byte	.LVL1
 1303 0168 91050000 		.4byte	0x591
 1304 016c 0D       		.uleb128 0xd
 1305 016d 01       		.uleb128 0x1
 1306 016e 50       		.byte	0x50
 1307 016f 01       		.uleb128 0x1
 1308 0170 3E       		.byte	0x3e
 1309 0171 00       		.byte	0
 1310 0172 00       		.byte	0
 1311 0173 0F       		.uleb128 0xf
 1312 0174 6B000000 		.4byte	0x6b
 1313 0178 83010000 		.4byte	0x183
 1314 017c 10       		.uleb128 0x10
 1315 017d F1000000 		.4byte	0xf1
 1316 0181 01       		.byte	0x1
 1317 0182 00       		.byte	0
 1318 0183 11       		.uleb128 0x11
 1319 0184 73010000 		.4byte	0x173
 1320 0188 12       		.uleb128 0x12
 1321 0189 51040000 		.4byte	.LASF27
 1322 018d 01       		.byte	0x1
 1323 018e 4A01     		.2byte	0x14a
 1324 0190 00000000 		.4byte	.LFB2
 1325 0194 24000000 		.4byte	.LFE2-.LFB2
 1326 0198 01       		.uleb128 0x1
 1327 0199 9C       		.byte	0x9c
 1328 019a AE010000 		.4byte	0x1ae
 1329 019e 0E       		.uleb128 0xe
 1330 019f 1C000000 		.4byte	.LVL26
 1331 01a3 AB050000 		.4byte	0x5ab
 1332 01a7 0D       		.uleb128 0xd
 1333 01a8 01       		.uleb128 0x1
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 40


 1334 01a9 50       		.byte	0x50
 1335 01aa 01       		.uleb128 0x1
 1336 01ab 3A       		.byte	0x3a
 1337 01ac 00       		.byte	0
 1338 01ad 00       		.byte	0
 1339 01ae 09       		.uleb128 0x9
 1340 01af 8E030000 		.4byte	.LASF28
 1341 01b3 01       		.byte	0x1
 1342 01b4 3F       		.byte	0x3f
 1343 01b5 00000000 		.4byte	.LFB0
 1344 01b9 20000000 		.4byte	.LFE0-.LFB0
 1345 01bd 01       		.uleb128 0x1
 1346 01be 9C       		.byte	0x9c
 1347 01bf D6010000 		.4byte	0x1d6
 1348 01c3 13       		.uleb128 0x13
 1349 01c4 0E000000 		.4byte	.LVL27
 1350 01c8 F8000000 		.4byte	0xf8
 1351 01cc 13       		.uleb128 0x13
 1352 01cd 18000000 		.4byte	.LVL28
 1353 01d1 88010000 		.4byte	0x188
 1354 01d5 00       		.byte	0
 1355 01d6 14       		.uleb128 0x14
 1356 01d7 39040000 		.4byte	.LASF29
 1357 01db 01       		.byte	0x1
 1358 01dc 6D01     		.2byte	0x16d
 1359 01de 00000000 		.4byte	.LFB3
 1360 01e2 10000000 		.4byte	.LFE3-.LFB3
 1361 01e6 01       		.uleb128 0x1
 1362 01e7 9C       		.byte	0x9c
 1363 01e8 14       		.uleb128 0x14
 1364 01e9 6D020000 		.4byte	.LASF30
 1365 01ed 01       		.byte	0x1
 1366 01ee 8701     		.2byte	0x187
 1367 01f0 00000000 		.4byte	.LFB4
 1368 01f4 14000000 		.4byte	.LFE4-.LFB4
 1369 01f8 01       		.uleb128 0x1
 1370 01f9 9C       		.byte	0x9c
 1371 01fa 14       		.uleb128 0x14
 1372 01fb 13020000 		.4byte	.LASF31
 1373 01ff 01       		.byte	0x1
 1374 0200 A001     		.2byte	0x1a0
 1375 0202 00000000 		.4byte	.LFB5
 1376 0206 14000000 		.4byte	.LFE5-.LFB5
 1377 020a 01       		.uleb128 0x1
 1378 020b 9C       		.byte	0x9c
 1379 020c 15       		.uleb128 0x15
 1380 020d 61000000 		.4byte	.LASF33
 1381 0211 01       		.byte	0x1
 1382 0212 C201     		.2byte	0x1c2
 1383 0214 81000000 		.4byte	0x81
 1384 0218 00000000 		.4byte	.LFB6
 1385 021c 4C000000 		.4byte	.LFE6-.LFB6
 1386 0220 01       		.uleb128 0x1
 1387 0221 9C       		.byte	0x9c
 1388 0222 47020000 		.4byte	0x247
 1389 0226 16       		.uleb128 0x16
 1390 0227 29010000 		.4byte	.LASF35
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 41


 1391 022b 01       		.byte	0x1
 1392 022c C201     		.2byte	0x1c2
 1393 022e 81000000 		.4byte	0x81
 1394 0232 13020000 		.4byte	.LLST3
 1395 0236 17       		.uleb128 0x17
 1396 0237 4A040000 		.4byte	.LASF32
 1397 023b 01       		.byte	0x1
 1398 023c C401     		.2byte	0x1c4
 1399 023e 81000000 		.4byte	0x81
 1400 0242 47020000 		.4byte	.LLST4
 1401 0246 00       		.byte	0
 1402 0247 15       		.uleb128 0x15
 1403 0248 3E010000 		.4byte	.LASF34
 1404 024c 01       		.byte	0x1
 1405 024d F801     		.2byte	0x1f8
 1406 024f 8C000000 		.4byte	0x8c
 1407 0253 00000000 		.4byte	.LFB7
 1408 0257 38000000 		.4byte	.LFE7-.LFB7
 1409 025b 01       		.uleb128 0x1
 1410 025c 9C       		.byte	0x9c
 1411 025d 91020000 		.4byte	0x291
 1412 0261 16       		.uleb128 0x16
 1413 0262 EA030000 		.4byte	.LASF36
 1414 0266 01       		.byte	0x1
 1415 0267 F801     		.2byte	0x1f8
 1416 0269 81000000 		.4byte	0x81
 1417 026d 7D020000 		.4byte	.LLST5
 1418 0271 17       		.uleb128 0x17
 1419 0272 83040000 		.4byte	.LASF37
 1420 0276 01       		.byte	0x1
 1421 0277 FA01     		.2byte	0x1fa
 1422 0279 81000000 		.4byte	0x81
 1423 027d C2020000 		.4byte	.LLST6
 1424 0281 0E       		.uleb128 0xe
 1425 0282 0E000000 		.4byte	.LVL38
 1426 0286 BC050000 		.4byte	0x5bc
 1427 028a 0D       		.uleb128 0xd
 1428 028b 01       		.uleb128 0x1
 1429 028c 50       		.byte	0x50
 1430 028d 01       		.uleb128 0x1
 1431 028e 30       		.byte	0x30
 1432 028f 00       		.byte	0
 1433 0290 00       		.byte	0
 1434 0291 12       		.uleb128 0x12
 1435 0292 57030000 		.4byte	.LASF38
 1436 0296 01       		.byte	0x1
 1437 0297 2502     		.2byte	0x225
 1438 0299 00000000 		.4byte	.LFB8
 1439 029d 10000000 		.4byte	.LFE8-.LFB8
 1440 02a1 01       		.uleb128 0x1
 1441 02a2 9C       		.byte	0x9c
 1442 02a3 B8020000 		.4byte	0x2b8
 1443 02a7 16       		.uleb128 0x16
 1444 02a8 24010000 		.4byte	.LASF39
 1445 02ac 01       		.byte	0x1
 1446 02ad 2502     		.2byte	0x225
 1447 02af 81000000 		.4byte	0x81
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 42


 1448 02b3 E0020000 		.4byte	.LLST7
 1449 02b7 00       		.byte	0
 1450 02b8 14       		.uleb128 0x14
 1451 02b9 22000000 		.4byte	.LASF40
 1452 02bd 01       		.byte	0x1
 1453 02be 3B02     		.2byte	0x23b
 1454 02c0 00000000 		.4byte	.LFB9
 1455 02c4 14000000 		.4byte	.LFE9-.LFB9
 1456 02c8 01       		.uleb128 0x1
 1457 02c9 9C       		.byte	0x9c
 1458 02ca 12       		.uleb128 0x12
 1459 02cb 8A040000 		.4byte	.LASF41
 1460 02cf 01       		.byte	0x1
 1461 02d0 5102     		.2byte	0x251
 1462 02d2 00000000 		.4byte	.LFB10
 1463 02d6 1C000000 		.4byte	.LFE10-.LFB10
 1464 02da 01       		.uleb128 0x1
 1465 02db 9C       		.byte	0x9c
 1466 02dc F1020000 		.4byte	0x2f1
 1467 02e0 16       		.uleb128 0x16
 1468 02e1 64020000 		.4byte	.LASF42
 1469 02e5 01       		.byte	0x1
 1470 02e6 5102     		.2byte	0x251
 1471 02e8 81000000 		.4byte	0x81
 1472 02ec 01030000 		.4byte	.LLST8
 1473 02f0 00       		.byte	0
 1474 02f1 12       		.uleb128 0x12
 1475 02f2 6A040000 		.4byte	.LASF43
 1476 02f6 01       		.byte	0x1
 1477 02f7 6602     		.2byte	0x266
 1478 02f9 00000000 		.4byte	.LFB11
 1479 02fd 18000000 		.4byte	.LFE11-.LFB11
 1480 0301 01       		.uleb128 0x1
 1481 0302 9C       		.byte	0x9c
 1482 0303 18030000 		.4byte	0x318
 1483 0307 16       		.uleb128 0x16
 1484 0308 4D030000 		.4byte	.LASF44
 1485 030c 01       		.byte	0x1
 1486 030d 6602     		.2byte	0x266
 1487 030f 81000000 		.4byte	0x81
 1488 0313 22030000 		.4byte	.LLST9
 1489 0317 00       		.byte	0
 1490 0318 12       		.uleb128 0x12
 1491 0319 D1030000 		.4byte	.LASF45
 1492 031d 01       		.byte	0x1
 1493 031e 7E02     		.2byte	0x27e
 1494 0320 00000000 		.4byte	.LFB12
 1495 0324 10000000 		.4byte	.LFE12-.LFB12
 1496 0328 01       		.uleb128 0x1
 1497 0329 9C       		.byte	0x9c
 1498 032a 3F030000 		.4byte	0x33f
 1499 032e 16       		.uleb128 0x16
 1500 032f 24010000 		.4byte	.LASF39
 1501 0333 01       		.byte	0x1
 1502 0334 7E02     		.2byte	0x27e
 1503 0336 81000000 		.4byte	0x81
 1504 033a 43030000 		.4byte	.LLST10
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 43


 1505 033e 00       		.byte	0
 1506 033f 12       		.uleb128 0x12
 1507 0340 A0030000 		.4byte	.LASF46
 1508 0344 01       		.byte	0x1
 1509 0345 9502     		.2byte	0x295
 1510 0347 00000000 		.4byte	.LFB13
 1511 034b 10000000 		.4byte	.LFE13-.LFB13
 1512 034f 01       		.uleb128 0x1
 1513 0350 9C       		.byte	0x9c
 1514 0351 66030000 		.4byte	0x366
 1515 0355 16       		.uleb128 0x16
 1516 0356 24010000 		.4byte	.LASF39
 1517 035a 01       		.byte	0x1
 1518 035b 9502     		.2byte	0x295
 1519 035d 81000000 		.4byte	0x81
 1520 0361 64030000 		.4byte	.LLST11
 1521 0365 00       		.byte	0
 1522 0366 12       		.uleb128 0x12
 1523 0367 A2040000 		.4byte	.LASF47
 1524 036b 01       		.byte	0x1
 1525 036c B102     		.2byte	0x2b1
 1526 036e 00000000 		.4byte	.LFB14
 1527 0372 1C000000 		.4byte	.LFE14-.LFB14
 1528 0376 01       		.uleb128 0x1
 1529 0377 9C       		.byte	0x9c
 1530 0378 AC030000 		.4byte	0x3ac
 1531 037c 16       		.uleb128 0x16
 1532 037d EA030000 		.4byte	.LASF36
 1533 0381 01       		.byte	0x1
 1534 0382 B102     		.2byte	0x2b1
 1535 0384 81000000 		.4byte	0x81
 1536 0388 85030000 		.4byte	.LLST12
 1537 038c 16       		.uleb128 0x16
 1538 038d 28040000 		.4byte	.LASF48
 1539 0391 01       		.byte	0x1
 1540 0392 B102     		.2byte	0x2b1
 1541 0394 8C000000 		.4byte	0x8c
 1542 0398 B1030000 		.4byte	.LLST13
 1543 039c 0E       		.uleb128 0xe
 1544 039d 10000000 		.4byte	.LVL56
 1545 03a1 BC050000 		.4byte	0x5bc
 1546 03a5 0D       		.uleb128 0xd
 1547 03a6 01       		.uleb128 0x1
 1548 03a7 50       		.byte	0x50
 1549 03a8 01       		.uleb128 0x1
 1550 03a9 30       		.byte	0x30
 1551 03aa 00       		.byte	0
 1552 03ab 00       		.byte	0
 1553 03ac 12       		.uleb128 0x12
 1554 03ad 4D000000 		.4byte	.LASF49
 1555 03b1 01       		.byte	0x1
 1556 03b2 D302     		.2byte	0x2d3
 1557 03b4 00000000 		.4byte	.LFB15
 1558 03b8 1C000000 		.4byte	.LFE15-.LFB15
 1559 03bc 01       		.uleb128 0x1
 1560 03bd 9C       		.byte	0x9c
 1561 03be F2030000 		.4byte	0x3f2
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 44


 1562 03c2 16       		.uleb128 0x16
 1563 03c3 EA030000 		.4byte	.LASF36
 1564 03c7 01       		.byte	0x1
 1565 03c8 D302     		.2byte	0x2d3
 1566 03ca 81000000 		.4byte	0x81
 1567 03ce D2030000 		.4byte	.LLST14
 1568 03d2 16       		.uleb128 0x16
 1569 03d3 3E000000 		.4byte	.LASF50
 1570 03d7 01       		.byte	0x1
 1571 03d8 D302     		.2byte	0x2d3
 1572 03da 97000000 		.4byte	0x97
 1573 03de FE030000 		.4byte	.LLST15
 1574 03e2 0E       		.uleb128 0xe
 1575 03e3 10000000 		.4byte	.LVL60
 1576 03e7 BC050000 		.4byte	0x5bc
 1577 03eb 0D       		.uleb128 0xd
 1578 03ec 01       		.uleb128 0x1
 1579 03ed 50       		.byte	0x50
 1580 03ee 01       		.uleb128 0x1
 1581 03ef 30       		.byte	0x30
 1582 03f0 00       		.byte	0
 1583 03f1 00       		.byte	0
 1584 03f2 18       		.uleb128 0x18
 1585 03f3 B0000000 		.4byte	.LASF51
 1586 03f7 01       		.byte	0x1
 1587 03f8 F402     		.2byte	0x2f4
 1588 03fa 8C000000 		.4byte	0x8c
 1589 03fe 00000000 		.4byte	.LFB16
 1590 0402 5C000000 		.4byte	.LFE16-.LFB16
 1591 0406 01       		.uleb128 0x1
 1592 0407 9C       		.byte	0x9c
 1593 0408 4A040000 		.4byte	0x44a
 1594 040c 16       		.uleb128 0x16
 1595 040d EA030000 		.4byte	.LASF36
 1596 0411 01       		.byte	0x1
 1597 0412 F402     		.2byte	0x2f4
 1598 0414 81000000 		.4byte	0x81
 1599 0418 2E040000 		.4byte	.LLST16
 1600 041c 16       		.uleb128 0x16
 1601 041d 2F040000 		.4byte	.LASF52
 1602 0421 01       		.byte	0x1
 1603 0422 F402     		.2byte	0x2f4
 1604 0424 8C000000 		.4byte	0x8c
 1605 0428 5A040000 		.4byte	.LLST17
 1606 042c 19       		.uleb128 0x19
 1607 042d 2B020000 		.4byte	.LASF53
 1608 0431 01       		.byte	0x1
 1609 0432 F602     		.2byte	0x2f6
 1610 0434 8C000000 		.4byte	0x8c
 1611 0438 01       		.uleb128 0x1
 1612 0439 50       		.byte	0x50
 1613 043a 0E       		.uleb128 0xe
 1614 043b 10000000 		.4byte	.LVL65
 1615 043f BC050000 		.4byte	0x5bc
 1616 0443 0D       		.uleb128 0xd
 1617 0444 01       		.uleb128 0x1
 1618 0445 50       		.byte	0x50
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 45


 1619 0446 01       		.uleb128 0x1
 1620 0447 30       		.byte	0x30
 1621 0448 00       		.byte	0
 1622 0449 00       		.byte	0
 1623 044a 18       		.uleb128 0x18
 1624 044b 7D000000 		.4byte	.LASF54
 1625 044f 01       		.byte	0x1
 1626 0450 2A03     		.2byte	0x32a
 1627 0452 97000000 		.4byte	0x97
 1628 0456 00000000 		.4byte	.LFB17
 1629 045a 40000000 		.4byte	.LFE17-.LFB17
 1630 045e 01       		.uleb128 0x1
 1631 045f 9C       		.byte	0x9c
 1632 0460 A0040000 		.4byte	0x4a0
 1633 0464 16       		.uleb128 0x16
 1634 0465 EA030000 		.4byte	.LASF36
 1635 0469 01       		.byte	0x1
 1636 046a 2A03     		.2byte	0x32a
 1637 046c 81000000 		.4byte	0x81
 1638 0470 91040000 		.4byte	.LLST18
 1639 0474 16       		.uleb128 0x16
 1640 0475 2F040000 		.4byte	.LASF52
 1641 0479 01       		.byte	0x1
 1642 047a 2A03     		.2byte	0x32a
 1643 047c 8C000000 		.4byte	0x8c
 1644 0480 BD040000 		.4byte	.LLST19
 1645 0484 1A       		.uleb128 0x1a
 1646 0485 56010000 		.4byte	.LASF66
 1647 0489 01       		.byte	0x1
 1648 048a 2C03     		.2byte	0x32c
 1649 048c BB000000 		.4byte	0xbb
 1650 0490 0E       		.uleb128 0xe
 1651 0491 10000000 		.4byte	.LVL74
 1652 0495 BC050000 		.4byte	0x5bc
 1653 0499 0D       		.uleb128 0xd
 1654 049a 01       		.uleb128 0x1
 1655 049b 50       		.byte	0x50
 1656 049c 01       		.uleb128 0x1
 1657 049d 30       		.byte	0x30
 1658 049e 00       		.byte	0
 1659 049f 00       		.byte	0
 1660 04a0 18       		.uleb128 0x18
 1661 04a1 00000000 		.4byte	.LASF55
 1662 04a5 01       		.byte	0x1
 1663 04a6 5703     		.2byte	0x357
 1664 04a8 A2000000 		.4byte	0xa2
 1665 04ac 00000000 		.4byte	.LFB18
 1666 04b0 48000000 		.4byte	.LFE18-.LFB18
 1667 04b4 01       		.uleb128 0x1
 1668 04b5 9C       		.byte	0x9c
 1669 04b6 F8040000 		.4byte	0x4f8
 1670 04ba 16       		.uleb128 0x16
 1671 04bb EA030000 		.4byte	.LASF36
 1672 04bf 01       		.byte	0x1
 1673 04c0 5703     		.2byte	0x357
 1674 04c2 81000000 		.4byte	0x81
 1675 04c6 E9040000 		.4byte	.LLST20
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 46


 1676 04ca 16       		.uleb128 0x16
 1677 04cb 2F040000 		.4byte	.LASF52
 1678 04cf 01       		.byte	0x1
 1679 04d0 5703     		.2byte	0x357
 1680 04d2 8C000000 		.4byte	0x8c
 1681 04d6 15050000 		.4byte	.LLST21
 1682 04da 19       		.uleb128 0x19
 1683 04db 6F010000 		.4byte	.LASF56
 1684 04df 01       		.byte	0x1
 1685 04e0 5903     		.2byte	0x359
 1686 04e2 A2000000 		.4byte	0xa2
 1687 04e6 01       		.uleb128 0x1
 1688 04e7 50       		.byte	0x50
 1689 04e8 0E       		.uleb128 0xe
 1690 04e9 10000000 		.4byte	.LVL81
 1691 04ed BC050000 		.4byte	0x5bc
 1692 04f1 0D       		.uleb128 0xd
 1693 04f2 01       		.uleb128 0x1
 1694 04f3 50       		.byte	0x50
 1695 04f4 01       		.uleb128 0x1
 1696 04f5 30       		.byte	0x30
 1697 04f6 00       		.byte	0
 1698 04f7 00       		.byte	0
 1699 04f8 0F       		.uleb128 0xf
 1700 04f9 81000000 		.4byte	0x81
 1701 04fd 08050000 		.4byte	0x508
 1702 0501 10       		.uleb128 0x10
 1703 0502 F1000000 		.4byte	0xf1
 1704 0506 01       		.byte	0x1
 1705 0507 00       		.byte	0
 1706 0508 0B       		.uleb128 0xb
 1707 0509 38020000 		.4byte	.LASF57
 1708 050d 01       		.byte	0x1
 1709 050e 21       		.byte	0x21
 1710 050f 19050000 		.4byte	0x519
 1711 0513 05       		.uleb128 0x5
 1712 0514 03       		.byte	0x3
 1713 0515 00000000 		.4byte	ADC_SAR_Seq_channelsConfig
 1714 0519 11       		.uleb128 0x11
 1715 051a F8040000 		.4byte	0x4f8
 1716 051e 1B       		.uleb128 0x1b
 1717 051f BD030000 		.4byte	.LASF58
 1718 0523 01       		.byte	0x1
 1719 0524 18       		.byte	0x18
 1720 0525 6B000000 		.4byte	0x6b
 1721 0529 05       		.uleb128 0x5
 1722 052a 03       		.byte	0x3
 1723 052b 00000000 		.4byte	ADC_SAR_Seq_initVar
 1724 052f 0F       		.uleb128 0xf
 1725 0530 8C000000 		.4byte	0x8c
 1726 0534 3F050000 		.4byte	0x53f
 1727 0538 10       		.uleb128 0x10
 1728 0539 F1000000 		.4byte	0xf1
 1729 053d 01       		.byte	0x1
 1730 053e 00       		.byte	0
 1731 053f 1B       		.uleb128 0x1b
 1732 0540 F1010000 		.4byte	.LASF59
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 47


 1733 0544 01       		.byte	0x1
 1734 0545 19       		.byte	0x19
 1735 0546 50050000 		.4byte	0x550
 1736 054a 05       		.uleb128 0x5
 1737 054b 03       		.byte	0x3
 1738 054c 00000000 		.4byte	ADC_SAR_Seq_offset
 1739 0550 06       		.uleb128 0x6
 1740 0551 2F050000 		.4byte	0x52f
 1741 0555 0F       		.uleb128 0xf
 1742 0556 97000000 		.4byte	0x97
 1743 055a 65050000 		.4byte	0x565
 1744 055e 10       		.uleb128 0x10
 1745 055f F1000000 		.4byte	0xf1
 1746 0563 01       		.byte	0x1
 1747 0564 00       		.byte	0
 1748 0565 1B       		.uleb128 0x1b
 1749 0566 C2010000 		.4byte	.LASF60
 1750 056a 01       		.byte	0x1
 1751 056b 1A       		.byte	0x1a
 1752 056c 76050000 		.4byte	0x576
 1753 0570 05       		.uleb128 0x5
 1754 0571 03       		.byte	0x3
 1755 0572 00000000 		.4byte	ADC_SAR_Seq_countsPer10Volt
 1756 0576 06       		.uleb128 0x6
 1757 0577 55050000 		.4byte	0x555
 1758 057b 1C       		.uleb128 0x1c
 1759 057c 1A030000 		.4byte	.LASF61
 1760 0580 03       		.byte	0x3
 1761 0581 49       		.byte	0x49
 1762 0582 91050000 		.4byte	0x591
 1763 0586 1D       		.uleb128 0x1d
 1764 0587 6B000000 		.4byte	0x6b
 1765 058b 1D       		.uleb128 0x1d
 1766 058c 6B000000 		.4byte	0x6b
 1767 0590 00       		.byte	0
 1768 0591 1E       		.uleb128 0x1e
 1769 0592 04020000 		.4byte	.LASF67
 1770 0596 03       		.byte	0x3
 1771 0597 46       		.byte	0x46
 1772 0598 DE000000 		.4byte	0xde
 1773 059c AB050000 		.4byte	0x5ab
 1774 05a0 1D       		.uleb128 0x1d
 1775 05a1 6B000000 		.4byte	0x6b
 1776 05a5 1D       		.uleb128 0x1d
 1777 05a6 DE000000 		.4byte	0xde
 1778 05aa 00       		.byte	0
 1779 05ab 1C       		.uleb128 0x1c
 1780 05ac FB000000 		.4byte	.LASF62
 1781 05b0 03       		.byte	0x3
 1782 05b1 58       		.byte	0x58
 1783 05b2 BC050000 		.4byte	0x5bc
 1784 05b6 1D       		.uleb128 0x1d
 1785 05b7 76000000 		.4byte	0x76
 1786 05bb 00       		.byte	0
 1787 05bc 1F       		.uleb128 0x1f
 1788 05bd 6F030000 		.4byte	.LASF68
 1789 05c1 03       		.byte	0x3
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 48


 1790 05c2 60       		.byte	0x60
 1791 05c3 1D       		.uleb128 0x1d
 1792 05c4 6B000000 		.4byte	0x6b
 1793 05c8 00       		.byte	0
 1794 05c9 00       		.byte	0
 1795              		.section	.debug_abbrev,"",%progbits
 1796              	.Ldebug_abbrev0:
 1797 0000 01       		.uleb128 0x1
 1798 0001 11       		.uleb128 0x11
 1799 0002 01       		.byte	0x1
 1800 0003 25       		.uleb128 0x25
 1801 0004 0E       		.uleb128 0xe
 1802 0005 13       		.uleb128 0x13
 1803 0006 0B       		.uleb128 0xb
 1804 0007 03       		.uleb128 0x3
 1805 0008 0E       		.uleb128 0xe
 1806 0009 1B       		.uleb128 0x1b
 1807 000a 0E       		.uleb128 0xe
 1808 000b 55       		.uleb128 0x55
 1809 000c 17       		.uleb128 0x17
 1810 000d 11       		.uleb128 0x11
 1811 000e 01       		.uleb128 0x1
 1812 000f 10       		.uleb128 0x10
 1813 0010 17       		.uleb128 0x17
 1814 0011 00       		.byte	0
 1815 0012 00       		.byte	0
 1816 0013 02       		.uleb128 0x2
 1817 0014 24       		.uleb128 0x24
 1818 0015 00       		.byte	0
 1819 0016 0B       		.uleb128 0xb
 1820 0017 0B       		.uleb128 0xb
 1821 0018 3E       		.uleb128 0x3e
 1822 0019 0B       		.uleb128 0xb
 1823 001a 03       		.uleb128 0x3
 1824 001b 0E       		.uleb128 0xe
 1825 001c 00       		.byte	0
 1826 001d 00       		.byte	0
 1827 001e 03       		.uleb128 0x3
 1828 001f 24       		.uleb128 0x24
 1829 0020 00       		.byte	0
 1830 0021 0B       		.uleb128 0xb
 1831 0022 0B       		.uleb128 0xb
 1832 0023 3E       		.uleb128 0x3e
 1833 0024 0B       		.uleb128 0xb
 1834 0025 03       		.uleb128 0x3
 1835 0026 08       		.uleb128 0x8
 1836 0027 00       		.byte	0
 1837 0028 00       		.byte	0
 1838 0029 04       		.uleb128 0x4
 1839 002a 16       		.uleb128 0x16
 1840 002b 00       		.byte	0
 1841 002c 03       		.uleb128 0x3
 1842 002d 0E       		.uleb128 0xe
 1843 002e 3A       		.uleb128 0x3a
 1844 002f 0B       		.uleb128 0xb
 1845 0030 3B       		.uleb128 0x3b
 1846 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 49


 1847 0032 49       		.uleb128 0x49
 1848 0033 13       		.uleb128 0x13
 1849 0034 00       		.byte	0
 1850 0035 00       		.byte	0
 1851 0036 05       		.uleb128 0x5
 1852 0037 16       		.uleb128 0x16
 1853 0038 00       		.byte	0
 1854 0039 03       		.uleb128 0x3
 1855 003a 0E       		.uleb128 0xe
 1856 003b 3A       		.uleb128 0x3a
 1857 003c 0B       		.uleb128 0xb
 1858 003d 3B       		.uleb128 0x3b
 1859 003e 05       		.uleb128 0x5
 1860 003f 49       		.uleb128 0x49
 1861 0040 13       		.uleb128 0x13
 1862 0041 00       		.byte	0
 1863 0042 00       		.byte	0
 1864 0043 06       		.uleb128 0x6
 1865 0044 35       		.uleb128 0x35
 1866 0045 00       		.byte	0
 1867 0046 49       		.uleb128 0x49
 1868 0047 13       		.uleb128 0x13
 1869 0048 00       		.byte	0
 1870 0049 00       		.byte	0
 1871 004a 07       		.uleb128 0x7
 1872 004b 0F       		.uleb128 0xf
 1873 004c 00       		.byte	0
 1874 004d 0B       		.uleb128 0xb
 1875 004e 0B       		.uleb128 0xb
 1876 004f 49       		.uleb128 0x49
 1877 0050 13       		.uleb128 0x13
 1878 0051 00       		.byte	0
 1879 0052 00       		.byte	0
 1880 0053 08       		.uleb128 0x8
 1881 0054 15       		.uleb128 0x15
 1882 0055 00       		.byte	0
 1883 0056 27       		.uleb128 0x27
 1884 0057 19       		.uleb128 0x19
 1885 0058 00       		.byte	0
 1886 0059 00       		.byte	0
 1887 005a 09       		.uleb128 0x9
 1888 005b 2E       		.uleb128 0x2e
 1889 005c 01       		.byte	0x1
 1890 005d 3F       		.uleb128 0x3f
 1891 005e 19       		.uleb128 0x19
 1892 005f 03       		.uleb128 0x3
 1893 0060 0E       		.uleb128 0xe
 1894 0061 3A       		.uleb128 0x3a
 1895 0062 0B       		.uleb128 0xb
 1896 0063 3B       		.uleb128 0x3b
 1897 0064 0B       		.uleb128 0xb
 1898 0065 27       		.uleb128 0x27
 1899 0066 19       		.uleb128 0x19
 1900 0067 11       		.uleb128 0x11
 1901 0068 01       		.uleb128 0x1
 1902 0069 12       		.uleb128 0x12
 1903 006a 06       		.uleb128 0x6
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 50


 1904 006b 40       		.uleb128 0x40
 1905 006c 18       		.uleb128 0x18
 1906 006d 9742     		.uleb128 0x2117
 1907 006f 19       		.uleb128 0x19
 1908 0070 01       		.uleb128 0x1
 1909 0071 13       		.uleb128 0x13
 1910 0072 00       		.byte	0
 1911 0073 00       		.byte	0
 1912 0074 0A       		.uleb128 0xa
 1913 0075 34       		.uleb128 0x34
 1914 0076 00       		.byte	0
 1915 0077 03       		.uleb128 0x3
 1916 0078 0E       		.uleb128 0xe
 1917 0079 3A       		.uleb128 0x3a
 1918 007a 0B       		.uleb128 0xb
 1919 007b 3B       		.uleb128 0x3b
 1920 007c 0B       		.uleb128 0xb
 1921 007d 49       		.uleb128 0x49
 1922 007e 13       		.uleb128 0x13
 1923 007f 02       		.uleb128 0x2
 1924 0080 17       		.uleb128 0x17
 1925 0081 00       		.byte	0
 1926 0082 00       		.byte	0
 1927 0083 0B       		.uleb128 0xb
 1928 0084 34       		.uleb128 0x34
 1929 0085 00       		.byte	0
 1930 0086 03       		.uleb128 0x3
 1931 0087 0E       		.uleb128 0xe
 1932 0088 3A       		.uleb128 0x3a
 1933 0089 0B       		.uleb128 0xb
 1934 008a 3B       		.uleb128 0x3b
 1935 008b 0B       		.uleb128 0xb
 1936 008c 49       		.uleb128 0x49
 1937 008d 13       		.uleb128 0x13
 1938 008e 02       		.uleb128 0x2
 1939 008f 18       		.uleb128 0x18
 1940 0090 00       		.byte	0
 1941 0091 00       		.byte	0
 1942 0092 0C       		.uleb128 0xc
 1943 0093 898201   		.uleb128 0x4109
 1944 0096 01       		.byte	0x1
 1945 0097 11       		.uleb128 0x11
 1946 0098 01       		.uleb128 0x1
 1947 0099 31       		.uleb128 0x31
 1948 009a 13       		.uleb128 0x13
 1949 009b 01       		.uleb128 0x1
 1950 009c 13       		.uleb128 0x13
 1951 009d 00       		.byte	0
 1952 009e 00       		.byte	0
 1953 009f 0D       		.uleb128 0xd
 1954 00a0 8A8201   		.uleb128 0x410a
 1955 00a3 00       		.byte	0
 1956 00a4 02       		.uleb128 0x2
 1957 00a5 18       		.uleb128 0x18
 1958 00a6 9142     		.uleb128 0x2111
 1959 00a8 18       		.uleb128 0x18
 1960 00a9 00       		.byte	0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 51


 1961 00aa 00       		.byte	0
 1962 00ab 0E       		.uleb128 0xe
 1963 00ac 898201   		.uleb128 0x4109
 1964 00af 01       		.byte	0x1
 1965 00b0 11       		.uleb128 0x11
 1966 00b1 01       		.uleb128 0x1
 1967 00b2 31       		.uleb128 0x31
 1968 00b3 13       		.uleb128 0x13
 1969 00b4 00       		.byte	0
 1970 00b5 00       		.byte	0
 1971 00b6 0F       		.uleb128 0xf
 1972 00b7 01       		.uleb128 0x1
 1973 00b8 01       		.byte	0x1
 1974 00b9 49       		.uleb128 0x49
 1975 00ba 13       		.uleb128 0x13
 1976 00bb 01       		.uleb128 0x1
 1977 00bc 13       		.uleb128 0x13
 1978 00bd 00       		.byte	0
 1979 00be 00       		.byte	0
 1980 00bf 10       		.uleb128 0x10
 1981 00c0 21       		.uleb128 0x21
 1982 00c1 00       		.byte	0
 1983 00c2 49       		.uleb128 0x49
 1984 00c3 13       		.uleb128 0x13
 1985 00c4 2F       		.uleb128 0x2f
 1986 00c5 0B       		.uleb128 0xb
 1987 00c6 00       		.byte	0
 1988 00c7 00       		.byte	0
 1989 00c8 11       		.uleb128 0x11
 1990 00c9 26       		.uleb128 0x26
 1991 00ca 00       		.byte	0
 1992 00cb 49       		.uleb128 0x49
 1993 00cc 13       		.uleb128 0x13
 1994 00cd 00       		.byte	0
 1995 00ce 00       		.byte	0
 1996 00cf 12       		.uleb128 0x12
 1997 00d0 2E       		.uleb128 0x2e
 1998 00d1 01       		.byte	0x1
 1999 00d2 3F       		.uleb128 0x3f
 2000 00d3 19       		.uleb128 0x19
 2001 00d4 03       		.uleb128 0x3
 2002 00d5 0E       		.uleb128 0xe
 2003 00d6 3A       		.uleb128 0x3a
 2004 00d7 0B       		.uleb128 0xb
 2005 00d8 3B       		.uleb128 0x3b
 2006 00d9 05       		.uleb128 0x5
 2007 00da 27       		.uleb128 0x27
 2008 00db 19       		.uleb128 0x19
 2009 00dc 11       		.uleb128 0x11
 2010 00dd 01       		.uleb128 0x1
 2011 00de 12       		.uleb128 0x12
 2012 00df 06       		.uleb128 0x6
 2013 00e0 40       		.uleb128 0x40
 2014 00e1 18       		.uleb128 0x18
 2015 00e2 9742     		.uleb128 0x2117
 2016 00e4 19       		.uleb128 0x19
 2017 00e5 01       		.uleb128 0x1
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 52


 2018 00e6 13       		.uleb128 0x13
 2019 00e7 00       		.byte	0
 2020 00e8 00       		.byte	0
 2021 00e9 13       		.uleb128 0x13
 2022 00ea 898201   		.uleb128 0x4109
 2023 00ed 00       		.byte	0
 2024 00ee 11       		.uleb128 0x11
 2025 00ef 01       		.uleb128 0x1
 2026 00f0 31       		.uleb128 0x31
 2027 00f1 13       		.uleb128 0x13
 2028 00f2 00       		.byte	0
 2029 00f3 00       		.byte	0
 2030 00f4 14       		.uleb128 0x14
 2031 00f5 2E       		.uleb128 0x2e
 2032 00f6 00       		.byte	0
 2033 00f7 3F       		.uleb128 0x3f
 2034 00f8 19       		.uleb128 0x19
 2035 00f9 03       		.uleb128 0x3
 2036 00fa 0E       		.uleb128 0xe
 2037 00fb 3A       		.uleb128 0x3a
 2038 00fc 0B       		.uleb128 0xb
 2039 00fd 3B       		.uleb128 0x3b
 2040 00fe 05       		.uleb128 0x5
 2041 00ff 27       		.uleb128 0x27
 2042 0100 19       		.uleb128 0x19
 2043 0101 11       		.uleb128 0x11
 2044 0102 01       		.uleb128 0x1
 2045 0103 12       		.uleb128 0x12
 2046 0104 06       		.uleb128 0x6
 2047 0105 40       		.uleb128 0x40
 2048 0106 18       		.uleb128 0x18
 2049 0107 9742     		.uleb128 0x2117
 2050 0109 19       		.uleb128 0x19
 2051 010a 00       		.byte	0
 2052 010b 00       		.byte	0
 2053 010c 15       		.uleb128 0x15
 2054 010d 2E       		.uleb128 0x2e
 2055 010e 01       		.byte	0x1
 2056 010f 3F       		.uleb128 0x3f
 2057 0110 19       		.uleb128 0x19
 2058 0111 03       		.uleb128 0x3
 2059 0112 0E       		.uleb128 0xe
 2060 0113 3A       		.uleb128 0x3a
 2061 0114 0B       		.uleb128 0xb
 2062 0115 3B       		.uleb128 0x3b
 2063 0116 05       		.uleb128 0x5
 2064 0117 27       		.uleb128 0x27
 2065 0118 19       		.uleb128 0x19
 2066 0119 49       		.uleb128 0x49
 2067 011a 13       		.uleb128 0x13
 2068 011b 11       		.uleb128 0x11
 2069 011c 01       		.uleb128 0x1
 2070 011d 12       		.uleb128 0x12
 2071 011e 06       		.uleb128 0x6
 2072 011f 40       		.uleb128 0x40
 2073 0120 18       		.uleb128 0x18
 2074 0121 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 53


 2075 0123 19       		.uleb128 0x19
 2076 0124 01       		.uleb128 0x1
 2077 0125 13       		.uleb128 0x13
 2078 0126 00       		.byte	0
 2079 0127 00       		.byte	0
 2080 0128 16       		.uleb128 0x16
 2081 0129 05       		.uleb128 0x5
 2082 012a 00       		.byte	0
 2083 012b 03       		.uleb128 0x3
 2084 012c 0E       		.uleb128 0xe
 2085 012d 3A       		.uleb128 0x3a
 2086 012e 0B       		.uleb128 0xb
 2087 012f 3B       		.uleb128 0x3b
 2088 0130 05       		.uleb128 0x5
 2089 0131 49       		.uleb128 0x49
 2090 0132 13       		.uleb128 0x13
 2091 0133 02       		.uleb128 0x2
 2092 0134 17       		.uleb128 0x17
 2093 0135 00       		.byte	0
 2094 0136 00       		.byte	0
 2095 0137 17       		.uleb128 0x17
 2096 0138 34       		.uleb128 0x34
 2097 0139 00       		.byte	0
 2098 013a 03       		.uleb128 0x3
 2099 013b 0E       		.uleb128 0xe
 2100 013c 3A       		.uleb128 0x3a
 2101 013d 0B       		.uleb128 0xb
 2102 013e 3B       		.uleb128 0x3b
 2103 013f 05       		.uleb128 0x5
 2104 0140 49       		.uleb128 0x49
 2105 0141 13       		.uleb128 0x13
 2106 0142 02       		.uleb128 0x2
 2107 0143 17       		.uleb128 0x17
 2108 0144 00       		.byte	0
 2109 0145 00       		.byte	0
 2110 0146 18       		.uleb128 0x18
 2111 0147 2E       		.uleb128 0x2e
 2112 0148 01       		.byte	0x1
 2113 0149 3F       		.uleb128 0x3f
 2114 014a 19       		.uleb128 0x19
 2115 014b 03       		.uleb128 0x3
 2116 014c 0E       		.uleb128 0xe
 2117 014d 3A       		.uleb128 0x3a
 2118 014e 0B       		.uleb128 0xb
 2119 014f 3B       		.uleb128 0x3b
 2120 0150 05       		.uleb128 0x5
 2121 0151 27       		.uleb128 0x27
 2122 0152 19       		.uleb128 0x19
 2123 0153 49       		.uleb128 0x49
 2124 0154 13       		.uleb128 0x13
 2125 0155 11       		.uleb128 0x11
 2126 0156 01       		.uleb128 0x1
 2127 0157 12       		.uleb128 0x12
 2128 0158 06       		.uleb128 0x6
 2129 0159 40       		.uleb128 0x40
 2130 015a 18       		.uleb128 0x18
 2131 015b 9642     		.uleb128 0x2116
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 54


 2132 015d 19       		.uleb128 0x19
 2133 015e 01       		.uleb128 0x1
 2134 015f 13       		.uleb128 0x13
 2135 0160 00       		.byte	0
 2136 0161 00       		.byte	0
 2137 0162 19       		.uleb128 0x19
 2138 0163 34       		.uleb128 0x34
 2139 0164 00       		.byte	0
 2140 0165 03       		.uleb128 0x3
 2141 0166 0E       		.uleb128 0xe
 2142 0167 3A       		.uleb128 0x3a
 2143 0168 0B       		.uleb128 0xb
 2144 0169 3B       		.uleb128 0x3b
 2145 016a 05       		.uleb128 0x5
 2146 016b 49       		.uleb128 0x49
 2147 016c 13       		.uleb128 0x13
 2148 016d 02       		.uleb128 0x2
 2149 016e 18       		.uleb128 0x18
 2150 016f 00       		.byte	0
 2151 0170 00       		.byte	0
 2152 0171 1A       		.uleb128 0x1a
 2153 0172 34       		.uleb128 0x34
 2154 0173 00       		.byte	0
 2155 0174 03       		.uleb128 0x3
 2156 0175 0E       		.uleb128 0xe
 2157 0176 3A       		.uleb128 0x3a
 2158 0177 0B       		.uleb128 0xb
 2159 0178 3B       		.uleb128 0x3b
 2160 0179 05       		.uleb128 0x5
 2161 017a 49       		.uleb128 0x49
 2162 017b 13       		.uleb128 0x13
 2163 017c 00       		.byte	0
 2164 017d 00       		.byte	0
 2165 017e 1B       		.uleb128 0x1b
 2166 017f 34       		.uleb128 0x34
 2167 0180 00       		.byte	0
 2168 0181 03       		.uleb128 0x3
 2169 0182 0E       		.uleb128 0xe
 2170 0183 3A       		.uleb128 0x3a
 2171 0184 0B       		.uleb128 0xb
 2172 0185 3B       		.uleb128 0x3b
 2173 0186 0B       		.uleb128 0xb
 2174 0187 49       		.uleb128 0x49
 2175 0188 13       		.uleb128 0x13
 2176 0189 3F       		.uleb128 0x3f
 2177 018a 19       		.uleb128 0x19
 2178 018b 02       		.uleb128 0x2
 2179 018c 18       		.uleb128 0x18
 2180 018d 00       		.byte	0
 2181 018e 00       		.byte	0
 2182 018f 1C       		.uleb128 0x1c
 2183 0190 2E       		.uleb128 0x2e
 2184 0191 01       		.byte	0x1
 2185 0192 3F       		.uleb128 0x3f
 2186 0193 19       		.uleb128 0x19
 2187 0194 03       		.uleb128 0x3
 2188 0195 0E       		.uleb128 0xe
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 55


 2189 0196 3A       		.uleb128 0x3a
 2190 0197 0B       		.uleb128 0xb
 2191 0198 3B       		.uleb128 0x3b
 2192 0199 0B       		.uleb128 0xb
 2193 019a 27       		.uleb128 0x27
 2194 019b 19       		.uleb128 0x19
 2195 019c 3C       		.uleb128 0x3c
 2196 019d 19       		.uleb128 0x19
 2197 019e 01       		.uleb128 0x1
 2198 019f 13       		.uleb128 0x13
 2199 01a0 00       		.byte	0
 2200 01a1 00       		.byte	0
 2201 01a2 1D       		.uleb128 0x1d
 2202 01a3 05       		.uleb128 0x5
 2203 01a4 00       		.byte	0
 2204 01a5 49       		.uleb128 0x49
 2205 01a6 13       		.uleb128 0x13
 2206 01a7 00       		.byte	0
 2207 01a8 00       		.byte	0
 2208 01a9 1E       		.uleb128 0x1e
 2209 01aa 2E       		.uleb128 0x2e
 2210 01ab 01       		.byte	0x1
 2211 01ac 3F       		.uleb128 0x3f
 2212 01ad 19       		.uleb128 0x19
 2213 01ae 03       		.uleb128 0x3
 2214 01af 0E       		.uleb128 0xe
 2215 01b0 3A       		.uleb128 0x3a
 2216 01b1 0B       		.uleb128 0xb
 2217 01b2 3B       		.uleb128 0x3b
 2218 01b3 0B       		.uleb128 0xb
 2219 01b4 27       		.uleb128 0x27
 2220 01b5 19       		.uleb128 0x19
 2221 01b6 49       		.uleb128 0x49
 2222 01b7 13       		.uleb128 0x13
 2223 01b8 3C       		.uleb128 0x3c
 2224 01b9 19       		.uleb128 0x19
 2225 01ba 01       		.uleb128 0x1
 2226 01bb 13       		.uleb128 0x13
 2227 01bc 00       		.byte	0
 2228 01bd 00       		.byte	0
 2229 01be 1F       		.uleb128 0x1f
 2230 01bf 2E       		.uleb128 0x2e
 2231 01c0 01       		.byte	0x1
 2232 01c1 3F       		.uleb128 0x3f
 2233 01c2 19       		.uleb128 0x19
 2234 01c3 03       		.uleb128 0x3
 2235 01c4 0E       		.uleb128 0xe
 2236 01c5 3A       		.uleb128 0x3a
 2237 01c6 0B       		.uleb128 0xb
 2238 01c7 3B       		.uleb128 0x3b
 2239 01c8 0B       		.uleb128 0xb
 2240 01c9 27       		.uleb128 0x27
 2241 01ca 19       		.uleb128 0x19
 2242 01cb 3C       		.uleb128 0x3c
 2243 01cc 19       		.uleb128 0x19
 2244 01cd 00       		.byte	0
 2245 01ce 00       		.byte	0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 56


 2246 01cf 00       		.byte	0
 2247              		.section	.debug_loc,"",%progbits
 2248              	.Ldebug_loc0:
 2249              	.LLST0:
 2250 0000 84000000 		.4byte	.LVL5
 2251 0004 88000000 		.4byte	.LVL6
 2252 0008 0200     		.2byte	0x2
 2253 000a 30       		.byte	0x30
 2254 000b 9F       		.byte	0x9f
 2255 000c 88000000 		.4byte	.LVL6
 2256 0010 C8010000 		.4byte	.LFE1
 2257 0014 0100     		.2byte	0x1
 2258 0016 52       		.byte	0x52
 2259 0017 00000000 		.4byte	0
 2260 001b 00000000 		.4byte	0
 2261              	.LLST1:
 2262 001f 7A000000 		.4byte	.LVL2
 2263 0023 7E000000 		.4byte	.LVL3
 2264 0027 0100     		.2byte	0x1
 2265 0029 52       		.byte	0x52
 2266 002a 7E000000 		.4byte	.LVL3
 2267 002e 88000000 		.4byte	.LVL6
 2268 0032 0100     		.2byte	0x1
 2269 0034 53       		.byte	0x53
 2270 0035 94000000 		.4byte	.LVL7
 2271 0039 AC000000 		.4byte	.LVL9
 2272 003d 0100     		.2byte	0x1
 2273 003f 53       		.byte	0x53
 2274 0040 AC000000 		.4byte	.LVL9
 2275 0044 AE000000 		.4byte	.LVL10
 2276 0048 0200     		.2byte	0x2
 2277 004a 71       		.byte	0x71
 2278 004b 00       		.sleb128 0
 2279 004c AE000000 		.4byte	.LVL10
 2280 0050 BC000000 		.4byte	.LVL11
 2281 0054 0700     		.2byte	0x7
 2282 0056 72       		.byte	0x72
 2283 0057 00       		.sleb128 0
 2284 0058 32       		.byte	0x32
 2285 0059 24       		.byte	0x24
 2286 005a 74       		.byte	0x74
 2287 005b 00       		.sleb128 0
 2288 005c 22       		.byte	0x22
 2289 005d BC000000 		.4byte	.LVL11
 2290 0061 C0000000 		.4byte	.LVL12
 2291 0065 1E00     		.2byte	0x1e
 2292 0067 72       		.byte	0x72
 2293 0068 00       		.sleb128 0
 2294 0069 32       		.byte	0x32
 2295 006a 24       		.byte	0x24
 2296 006b 03       		.byte	0x3
 2297 006c 00000000 		.4byte	.LANCHOR0
 2298 0070 22       		.byte	0x22
 2299 0071 06       		.byte	0x6
 2300 0072 0A       		.byte	0xa
 2301 0073 0037     		.2byte	0x3700
 2302 0075 1A       		.byte	0x1a
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 57


 2303 0076 72       		.byte	0x72
 2304 0077 00       		.sleb128 0
 2305 0078 03       		.byte	0x3
 2306 0079 08000000 		.4byte	.LANCHOR0+8
 2307 007d 22       		.byte	0x22
 2308 007e 94       		.byte	0x94
 2309 007f 01       		.byte	0x1
 2310 0080 08       		.byte	0x8
 2311 0081 FF       		.byte	0xff
 2312 0082 1A       		.byte	0x1a
 2313 0083 21       		.byte	0x21
 2314 0084 9F       		.byte	0x9f
 2315 0085 C0000000 		.4byte	.LVL12
 2316 0089 C8000000 		.4byte	.LVL13
 2317 008d 1A00     		.2byte	0x1a
 2318 008f 72       		.byte	0x72
 2319 0090 00       		.sleb128 0
 2320 0091 32       		.byte	0x32
 2321 0092 24       		.byte	0x24
 2322 0093 71       		.byte	0x71
 2323 0094 00       		.sleb128 0
 2324 0095 22       		.byte	0x22
 2325 0096 06       		.byte	0x6
 2326 0097 0A       		.byte	0xa
 2327 0098 0037     		.2byte	0x3700
 2328 009a 1A       		.byte	0x1a
 2329 009b 71       		.byte	0x71
 2330 009c 00       		.sleb128 0
 2331 009d 72       		.byte	0x72
 2332 009e 00       		.sleb128 0
 2333 009f 22       		.byte	0x22
 2334 00a0 23       		.byte	0x23
 2335 00a1 08       		.uleb128 0x8
 2336 00a2 94       		.byte	0x94
 2337 00a3 01       		.byte	0x1
 2338 00a4 08       		.byte	0x8
 2339 00a5 FF       		.byte	0xff
 2340 00a6 1A       		.byte	0x1a
 2341 00a7 21       		.byte	0x21
 2342 00a8 9F       		.byte	0x9f
 2343 00a9 C8000000 		.4byte	.LVL13
 2344 00ad D8000000 		.4byte	.LVL14
 2345 00b1 1E00     		.2byte	0x1e
 2346 00b3 72       		.byte	0x72
 2347 00b4 00       		.sleb128 0
 2348 00b5 32       		.byte	0x32
 2349 00b6 24       		.byte	0x24
 2350 00b7 03       		.byte	0x3
 2351 00b8 00000000 		.4byte	.LANCHOR0
 2352 00bc 22       		.byte	0x22
 2353 00bd 06       		.byte	0x6
 2354 00be 0A       		.byte	0xa
 2355 00bf 0037     		.2byte	0x3700
 2356 00c1 1A       		.byte	0x1a
 2357 00c2 72       		.byte	0x72
 2358 00c3 00       		.sleb128 0
 2359 00c4 03       		.byte	0x3
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 58


 2360 00c5 08000000 		.4byte	.LANCHOR0+8
 2361 00c9 22       		.byte	0x22
 2362 00ca 94       		.byte	0x94
 2363 00cb 01       		.byte	0x1
 2364 00cc 08       		.byte	0x8
 2365 00cd FF       		.byte	0xff
 2366 00ce 1A       		.byte	0x1a
 2367 00cf 21       		.byte	0x21
 2368 00d0 9F       		.byte	0x9f
 2369 00d1 D8000000 		.4byte	.LVL14
 2370 00d5 DE000000 		.4byte	.LVL15
 2371 00d9 0100     		.2byte	0x1
 2372 00db 53       		.byte	0x53
 2373 00dc DE000000 		.4byte	.LVL15
 2374 00e0 E6000000 		.4byte	.LVL16
 2375 00e4 1500     		.2byte	0x15
 2376 00e6 70       		.byte	0x70
 2377 00e7 00       		.sleb128 0
 2378 00e8 0A       		.byte	0xa
 2379 00e9 0037     		.2byte	0x3700
 2380 00eb 1A       		.byte	0x1a
 2381 00ec 72       		.byte	0x72
 2382 00ed 00       		.sleb128 0
 2383 00ee 03       		.byte	0x3
 2384 00ef 08000000 		.4byte	.LANCHOR0+8
 2385 00f3 22       		.byte	0x22
 2386 00f4 94       		.byte	0x94
 2387 00f5 01       		.byte	0x1
 2388 00f6 08       		.byte	0x8
 2389 00f7 FF       		.byte	0xff
 2390 00f8 1A       		.byte	0x1a
 2391 00f9 21       		.byte	0x21
 2392 00fa 9F       		.byte	0x9f
 2393 00fb E6000000 		.4byte	.LVL16
 2394 00ff EE000000 		.4byte	.LVL17
 2395 0103 1400     		.2byte	0x14
 2396 0105 70       		.byte	0x70
 2397 0106 00       		.sleb128 0
 2398 0107 0A       		.byte	0xa
 2399 0108 0037     		.2byte	0x3700
 2400 010a 1A       		.byte	0x1a
 2401 010b 71       		.byte	0x71
 2402 010c 00       		.sleb128 0
 2403 010d 72       		.byte	0x72
 2404 010e 00       		.sleb128 0
 2405 010f 22       		.byte	0x22
 2406 0110 23       		.byte	0x23
 2407 0111 08       		.uleb128 0x8
 2408 0112 94       		.byte	0x94
 2409 0113 01       		.byte	0x1
 2410 0114 08       		.byte	0x8
 2411 0115 FF       		.byte	0xff
 2412 0116 1A       		.byte	0x1a
 2413 0117 21       		.byte	0x21
 2414 0118 9F       		.byte	0x9f
 2415 0119 EE000000 		.4byte	.LVL17
 2416 011d F0000000 		.4byte	.LVL18
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 59


 2417 0121 1500     		.2byte	0x15
 2418 0123 70       		.byte	0x70
 2419 0124 00       		.sleb128 0
 2420 0125 0A       		.byte	0xa
 2421 0126 0037     		.2byte	0x3700
 2422 0128 1A       		.byte	0x1a
 2423 0129 72       		.byte	0x72
 2424 012a 00       		.sleb128 0
 2425 012b 03       		.byte	0x3
 2426 012c 08000000 		.4byte	.LANCHOR0+8
 2427 0130 22       		.byte	0x22
 2428 0131 94       		.byte	0x94
 2429 0132 01       		.byte	0x1
 2430 0133 08       		.byte	0x8
 2431 0134 FF       		.byte	0xff
 2432 0135 1A       		.byte	0x1a
 2433 0136 21       		.byte	0x21
 2434 0137 9F       		.byte	0x9f
 2435 0138 F0000000 		.4byte	.LVL18
 2436 013c FA000000 		.4byte	.LVL19
 2437 0140 1E00     		.2byte	0x1e
 2438 0142 72       		.byte	0x72
 2439 0143 00       		.sleb128 0
 2440 0144 32       		.byte	0x32
 2441 0145 24       		.byte	0x24
 2442 0146 03       		.byte	0x3
 2443 0147 00000000 		.4byte	.LANCHOR0
 2444 014b 22       		.byte	0x22
 2445 014c 06       		.byte	0x6
 2446 014d 0A       		.byte	0xa
 2447 014e 0037     		.2byte	0x3700
 2448 0150 1A       		.byte	0x1a
 2449 0151 72       		.byte	0x72
 2450 0152 00       		.sleb128 0
 2451 0153 03       		.byte	0x3
 2452 0154 08000000 		.4byte	.LANCHOR0+8
 2453 0158 22       		.byte	0x22
 2454 0159 94       		.byte	0x94
 2455 015a 01       		.byte	0x1
 2456 015b 08       		.byte	0x8
 2457 015c FF       		.byte	0xff
 2458 015d 1A       		.byte	0x1a
 2459 015e 21       		.byte	0x21
 2460 015f 9F       		.byte	0x9f
 2461 0160 FA000000 		.4byte	.LVL19
 2462 0164 02010000 		.4byte	.LVL20
 2463 0168 1A00     		.2byte	0x1a
 2464 016a 72       		.byte	0x72
 2465 016b 00       		.sleb128 0
 2466 016c 32       		.byte	0x32
 2467 016d 24       		.byte	0x24
 2468 016e 71       		.byte	0x71
 2469 016f 00       		.sleb128 0
 2470 0170 22       		.byte	0x22
 2471 0171 06       		.byte	0x6
 2472 0172 0A       		.byte	0xa
 2473 0173 0037     		.2byte	0x3700
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 60


 2474 0175 1A       		.byte	0x1a
 2475 0176 71       		.byte	0x71
 2476 0177 00       		.sleb128 0
 2477 0178 72       		.byte	0x72
 2478 0179 00       		.sleb128 0
 2479 017a 22       		.byte	0x22
 2480 017b 23       		.byte	0x23
 2481 017c 08       		.uleb128 0x8
 2482 017d 94       		.byte	0x94
 2483 017e 01       		.byte	0x1
 2484 017f 08       		.byte	0x8
 2485 0180 FF       		.byte	0xff
 2486 0181 1A       		.byte	0x1a
 2487 0182 21       		.byte	0x21
 2488 0183 9F       		.byte	0x9f
 2489 0184 02010000 		.4byte	.LVL20
 2490 0188 0E010000 		.4byte	.LVL21
 2491 018c 1E00     		.2byte	0x1e
 2492 018e 72       		.byte	0x72
 2493 018f 00       		.sleb128 0
 2494 0190 32       		.byte	0x32
 2495 0191 24       		.byte	0x24
 2496 0192 03       		.byte	0x3
 2497 0193 00000000 		.4byte	.LANCHOR0
 2498 0197 22       		.byte	0x22
 2499 0198 06       		.byte	0x6
 2500 0199 0A       		.byte	0xa
 2501 019a 0037     		.2byte	0x3700
 2502 019c 1A       		.byte	0x1a
 2503 019d 72       		.byte	0x72
 2504 019e 00       		.sleb128 0
 2505 019f 03       		.byte	0x3
 2506 01a0 08000000 		.4byte	.LANCHOR0+8
 2507 01a4 22       		.byte	0x22
 2508 01a5 94       		.byte	0x94
 2509 01a6 01       		.byte	0x1
 2510 01a7 08       		.byte	0x8
 2511 01a8 FF       		.byte	0xff
 2512 01a9 1A       		.byte	0x1a
 2513 01aa 21       		.byte	0x21
 2514 01ab 9F       		.byte	0x9f
 2515 01ac 0E010000 		.4byte	.LVL21
 2516 01b0 10010000 		.4byte	.LVL22
 2517 01b4 1A00     		.2byte	0x1a
 2518 01b6 72       		.byte	0x72
 2519 01b7 00       		.sleb128 0
 2520 01b8 32       		.byte	0x32
 2521 01b9 24       		.byte	0x24
 2522 01ba 71       		.byte	0x71
 2523 01bb 00       		.sleb128 0
 2524 01bc 22       		.byte	0x22
 2525 01bd 06       		.byte	0x6
 2526 01be 0A       		.byte	0xa
 2527 01bf 0037     		.2byte	0x3700
 2528 01c1 1A       		.byte	0x1a
 2529 01c2 71       		.byte	0x71
 2530 01c3 00       		.sleb128 0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 61


 2531 01c4 72       		.byte	0x72
 2532 01c5 00       		.sleb128 0
 2533 01c6 22       		.byte	0x22
 2534 01c7 23       		.byte	0x23
 2535 01c8 08       		.uleb128 0x8
 2536 01c9 94       		.byte	0x94
 2537 01ca 01       		.byte	0x1
 2538 01cb 08       		.byte	0x8
 2539 01cc FF       		.byte	0xff
 2540 01cd 1A       		.byte	0x1a
 2541 01ce 21       		.byte	0x21
 2542 01cf 9F       		.byte	0x9f
 2543 01d0 10010000 		.4byte	.LVL22
 2544 01d4 52010000 		.4byte	.LVL25
 2545 01d8 1E00     		.2byte	0x1e
 2546 01da 72       		.byte	0x72
 2547 01db 00       		.sleb128 0
 2548 01dc 32       		.byte	0x32
 2549 01dd 24       		.byte	0x24
 2550 01de 03       		.byte	0x3
 2551 01df 00000000 		.4byte	.LANCHOR0
 2552 01e3 22       		.byte	0x22
 2553 01e4 06       		.byte	0x6
 2554 01e5 0A       		.byte	0xa
 2555 01e6 0037     		.2byte	0x3700
 2556 01e8 1A       		.byte	0x1a
 2557 01e9 72       		.byte	0x72
 2558 01ea 00       		.sleb128 0
 2559 01eb 03       		.byte	0x3
 2560 01ec 08000000 		.4byte	.LANCHOR0+8
 2561 01f0 22       		.byte	0x22
 2562 01f1 94       		.byte	0x94
 2563 01f2 01       		.byte	0x1
 2564 01f3 08       		.byte	0x8
 2565 01f4 FF       		.byte	0xff
 2566 01f5 1A       		.byte	0x1a
 2567 01f6 21       		.byte	0x21
 2568 01f7 9F       		.byte	0x9f
 2569 01f8 00000000 		.4byte	0
 2570 01fc 00000000 		.4byte	0
 2571              	.LLST2:
 2572 0200 1E010000 		.4byte	.LVL23
 2573 0204 4C010000 		.4byte	.LVL24
 2574 0208 0100     		.2byte	0x1
 2575 020a 50       		.byte	0x50
 2576 020b 00000000 		.4byte	0
 2577 020f 00000000 		.4byte	0
 2578              	.LLST3:
 2579 0213 00000000 		.4byte	.LVL29
 2580 0217 06000000 		.4byte	.LVL31
 2581 021b 0100     		.2byte	0x1
 2582 021d 50       		.byte	0x50
 2583 021e 06000000 		.4byte	.LVL31
 2584 0222 20000000 		.4byte	.LVL33
 2585 0226 0100     		.2byte	0x1
 2586 0228 51       		.byte	0x51
 2587 0229 20000000 		.4byte	.LVL33
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 62


 2588 022d 22000000 		.4byte	.LVL34
 2589 0231 0100     		.2byte	0x1
 2590 0233 50       		.byte	0x50
 2591 0234 22000000 		.4byte	.LVL34
 2592 0238 4C000000 		.4byte	.LFE6
 2593 023c 0100     		.2byte	0x1
 2594 023e 51       		.byte	0x51
 2595 023f 00000000 		.4byte	0
 2596 0243 00000000 		.4byte	0
 2597              	.LLST4:
 2598 0247 02000000 		.4byte	.LVL30
 2599 024b 06000000 		.4byte	.LVL31
 2600 024f 0200     		.2byte	0x2
 2601 0251 30       		.byte	0x30
 2602 0252 9F       		.byte	0x9f
 2603 0253 0E000000 		.4byte	.LVL32
 2604 0257 20000000 		.4byte	.LVL33
 2605 025b 0100     		.2byte	0x1
 2606 025d 50       		.byte	0x50
 2607 025e 20000000 		.4byte	.LVL33
 2608 0262 22000000 		.4byte	.LVL34
 2609 0266 0200     		.2byte	0x2
 2610 0268 30       		.byte	0x30
 2611 0269 9F       		.byte	0x9f
 2612 026a 22000000 		.4byte	.LVL34
 2613 026e 4C000000 		.4byte	.LFE6
 2614 0272 0100     		.2byte	0x1
 2615 0274 50       		.byte	0x50
 2616 0275 00000000 		.4byte	0
 2617 0279 00000000 		.4byte	0
 2618              	.LLST5:
 2619 027d 00000000 		.4byte	.LVL36
 2620 0281 0A000000 		.4byte	.LVL37
 2621 0285 0100     		.2byte	0x1
 2622 0287 50       		.byte	0x50
 2623 0288 0A000000 		.4byte	.LVL37
 2624 028c 14000000 		.4byte	.LVL39
 2625 0290 0100     		.2byte	0x1
 2626 0292 54       		.byte	0x54
 2627 0293 14000000 		.4byte	.LVL39
 2628 0297 22000000 		.4byte	.LVL41
 2629 029b 0400     		.2byte	0x4
 2630 029d F3       		.byte	0xf3
 2631 029e 01       		.uleb128 0x1
 2632 029f 50       		.byte	0x50
 2633 02a0 9F       		.byte	0x9f
 2634 02a1 22000000 		.4byte	.LVL41
 2635 02a5 2A000000 		.4byte	.LVL42
 2636 02a9 0100     		.2byte	0x1
 2637 02ab 54       		.byte	0x54
 2638 02ac 2A000000 		.4byte	.LVL42
 2639 02b0 38000000 		.4byte	.LFE7
 2640 02b4 0400     		.2byte	0x4
 2641 02b6 F3       		.byte	0xf3
 2642 02b7 01       		.uleb128 0x1
 2643 02b8 50       		.byte	0x50
 2644 02b9 9F       		.byte	0x9f
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 63


 2645 02ba 00000000 		.4byte	0
 2646 02be 00000000 		.4byte	0
 2647              	.LLST6:
 2648 02c2 20000000 		.4byte	.LVL40
 2649 02c6 22000000 		.4byte	.LVL41
 2650 02ca 0100     		.2byte	0x1
 2651 02cc 50       		.byte	0x50
 2652 02cd 2A000000 		.4byte	.LVL42
 2653 02d1 2C000000 		.4byte	.LVL43
 2654 02d5 0100     		.2byte	0x1
 2655 02d7 50       		.byte	0x50
 2656 02d8 00000000 		.4byte	0
 2657 02dc 00000000 		.4byte	0
 2658              	.LLST7:
 2659 02e0 00000000 		.4byte	.LVL44
 2660 02e4 04000000 		.4byte	.LVL45
 2661 02e8 0100     		.2byte	0x1
 2662 02ea 50       		.byte	0x50
 2663 02eb 04000000 		.4byte	.LVL45
 2664 02ef 10000000 		.4byte	.LFE8
 2665 02f3 0400     		.2byte	0x4
 2666 02f5 F3       		.byte	0xf3
 2667 02f6 01       		.uleb128 0x1
 2668 02f7 50       		.byte	0x50
 2669 02f8 9F       		.byte	0x9f
 2670 02f9 00000000 		.4byte	0
 2671 02fd 00000000 		.4byte	0
 2672              	.LLST8:
 2673 0301 00000000 		.4byte	.LVL46
 2674 0305 0E000000 		.4byte	.LVL47
 2675 0309 0100     		.2byte	0x1
 2676 030b 50       		.byte	0x50
 2677 030c 0E000000 		.4byte	.LVL47
 2678 0310 1C000000 		.4byte	.LFE10
 2679 0314 0400     		.2byte	0x4
 2680 0316 F3       		.byte	0xf3
 2681 0317 01       		.uleb128 0x1
 2682 0318 50       		.byte	0x50
 2683 0319 9F       		.byte	0x9f
 2684 031a 00000000 		.4byte	0
 2685 031e 00000000 		.4byte	0
 2686              	.LLST9:
 2687 0322 00000000 		.4byte	.LVL48
 2688 0326 0E000000 		.4byte	.LVL49
 2689 032a 0100     		.2byte	0x1
 2690 032c 50       		.byte	0x50
 2691 032d 0E000000 		.4byte	.LVL49
 2692 0331 18000000 		.4byte	.LFE11
 2693 0335 0400     		.2byte	0x4
 2694 0337 F3       		.byte	0xf3
 2695 0338 01       		.uleb128 0x1
 2696 0339 50       		.byte	0x50
 2697 033a 9F       		.byte	0x9f
 2698 033b 00000000 		.4byte	0
 2699 033f 00000000 		.4byte	0
 2700              	.LLST10:
 2701 0343 00000000 		.4byte	.LVL50
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 64


 2702 0347 04000000 		.4byte	.LVL51
 2703 034b 0100     		.2byte	0x1
 2704 034d 50       		.byte	0x50
 2705 034e 04000000 		.4byte	.LVL51
 2706 0352 10000000 		.4byte	.LFE12
 2707 0356 0400     		.2byte	0x4
 2708 0358 F3       		.byte	0xf3
 2709 0359 01       		.uleb128 0x1
 2710 035a 50       		.byte	0x50
 2711 035b 9F       		.byte	0x9f
 2712 035c 00000000 		.4byte	0
 2713 0360 00000000 		.4byte	0
 2714              	.LLST11:
 2715 0364 00000000 		.4byte	.LVL52
 2716 0368 04000000 		.4byte	.LVL53
 2717 036c 0100     		.2byte	0x1
 2718 036e 50       		.byte	0x50
 2719 036f 04000000 		.4byte	.LVL53
 2720 0373 10000000 		.4byte	.LFE13
 2721 0377 0400     		.2byte	0x4
 2722 0379 F3       		.byte	0xf3
 2723 037a 01       		.uleb128 0x1
 2724 037b 50       		.byte	0x50
 2725 037c 9F       		.byte	0x9f
 2726 037d 00000000 		.4byte	0
 2727 0381 00000000 		.4byte	0
 2728              	.LLST12:
 2729 0385 00000000 		.4byte	.LVL54
 2730 0389 0C000000 		.4byte	.LVL55
 2731 038d 0100     		.2byte	0x1
 2732 038f 50       		.byte	0x50
 2733 0390 0C000000 		.4byte	.LVL55
 2734 0394 12000000 		.4byte	.LVL57
 2735 0398 0100     		.2byte	0x1
 2736 039a 54       		.byte	0x54
 2737 039b 12000000 		.4byte	.LVL57
 2738 039f 1C000000 		.4byte	.LFE14
 2739 03a3 0400     		.2byte	0x4
 2740 03a5 F3       		.byte	0xf3
 2741 03a6 01       		.uleb128 0x1
 2742 03a7 50       		.byte	0x50
 2743 03a8 9F       		.byte	0x9f
 2744 03a9 00000000 		.4byte	0
 2745 03ad 00000000 		.4byte	0
 2746              	.LLST13:
 2747 03b1 00000000 		.4byte	.LVL54
 2748 03b5 0F000000 		.4byte	.LVL56-1
 2749 03b9 0100     		.2byte	0x1
 2750 03bb 51       		.byte	0x51
 2751 03bc 0F000000 		.4byte	.LVL56-1
 2752 03c0 1C000000 		.4byte	.LFE14
 2753 03c4 0400     		.2byte	0x4
 2754 03c6 F3       		.byte	0xf3
 2755 03c7 01       		.uleb128 0x1
 2756 03c8 51       		.byte	0x51
 2757 03c9 9F       		.byte	0x9f
 2758 03ca 00000000 		.4byte	0
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 65


 2759 03ce 00000000 		.4byte	0
 2760              	.LLST14:
 2761 03d2 00000000 		.4byte	.LVL58
 2762 03d6 0C000000 		.4byte	.LVL59
 2763 03da 0100     		.2byte	0x1
 2764 03dc 50       		.byte	0x50
 2765 03dd 0C000000 		.4byte	.LVL59
 2766 03e1 12000000 		.4byte	.LVL61
 2767 03e5 0100     		.2byte	0x1
 2768 03e7 54       		.byte	0x54
 2769 03e8 12000000 		.4byte	.LVL61
 2770 03ec 1C000000 		.4byte	.LFE15
 2771 03f0 0400     		.2byte	0x4
 2772 03f2 F3       		.byte	0xf3
 2773 03f3 01       		.uleb128 0x1
 2774 03f4 50       		.byte	0x50
 2775 03f5 9F       		.byte	0x9f
 2776 03f6 00000000 		.4byte	0
 2777 03fa 00000000 		.4byte	0
 2778              	.LLST15:
 2779 03fe 00000000 		.4byte	.LVL58
 2780 0402 0F000000 		.4byte	.LVL60-1
 2781 0406 0100     		.2byte	0x1
 2782 0408 51       		.byte	0x51
 2783 0409 0F000000 		.4byte	.LVL60-1
 2784 040d 16000000 		.4byte	.LVL62
 2785 0411 0100     		.2byte	0x1
 2786 0413 55       		.byte	0x55
 2787 0414 16000000 		.4byte	.LVL62
 2788 0418 1C000000 		.4byte	.LFE15
 2789 041c 0800     		.2byte	0x8
 2790 041e F3       		.byte	0xf3
 2791 041f 01       		.uleb128 0x1
 2792 0420 50       		.byte	0x50
 2793 0421 32       		.byte	0x32
 2794 0422 24       		.byte	0x24
 2795 0423 73       		.byte	0x73
 2796 0424 00       		.sleb128 0
 2797 0425 22       		.byte	0x22
 2798 0426 00000000 		.4byte	0
 2799 042a 00000000 		.4byte	0
 2800              	.LLST16:
 2801 042e 00000000 		.4byte	.LVL63
 2802 0432 0C000000 		.4byte	.LVL64
 2803 0436 0100     		.2byte	0x1
 2804 0438 50       		.byte	0x50
 2805 0439 0C000000 		.4byte	.LVL64
 2806 043d 44000000 		.4byte	.LVL70
 2807 0441 0100     		.2byte	0x1
 2808 0443 54       		.byte	0x54
 2809 0444 44000000 		.4byte	.LVL70
 2810 0448 5C000000 		.4byte	.LFE16
 2811 044c 0400     		.2byte	0x4
 2812 044e F3       		.byte	0xf3
 2813 044f 01       		.uleb128 0x1
 2814 0450 50       		.byte	0x50
 2815 0451 9F       		.byte	0x9f
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 66


 2816 0452 00000000 		.4byte	0
 2817 0456 00000000 		.4byte	0
 2818              	.LLST17:
 2819 045a 00000000 		.4byte	.LVL63
 2820 045e 0F000000 		.4byte	.LVL65-1
 2821 0462 0100     		.2byte	0x1
 2822 0464 51       		.byte	0x51
 2823 0465 0F000000 		.4byte	.LVL65-1
 2824 0469 1A000000 		.4byte	.LVL66
 2825 046d 0400     		.2byte	0x4
 2826 046f F3       		.byte	0xf3
 2827 0470 01       		.uleb128 0x1
 2828 0471 51       		.byte	0x51
 2829 0472 9F       		.byte	0x9f
 2830 0473 1A000000 		.4byte	.LVL66
 2831 0477 28000000 		.4byte	.LVL67
 2832 047b 0100     		.2byte	0x1
 2833 047d 51       		.byte	0x51
 2834 047e 32000000 		.4byte	.LVL68
 2835 0482 36000000 		.4byte	.LVL69
 2836 0486 0100     		.2byte	0x1
 2837 0488 51       		.byte	0x51
 2838 0489 00000000 		.4byte	0
 2839 048d 00000000 		.4byte	0
 2840              	.LLST18:
 2841 0491 00000000 		.4byte	.LVL72
 2842 0495 0C000000 		.4byte	.LVL73
 2843 0499 0100     		.2byte	0x1
 2844 049b 50       		.byte	0x50
 2845 049c 0C000000 		.4byte	.LVL73
 2846 04a0 26000000 		.4byte	.LVL77
 2847 04a4 0100     		.2byte	0x1
 2848 04a6 55       		.byte	0x55
 2849 04a7 26000000 		.4byte	.LVL77
 2850 04ab 40000000 		.4byte	.LFE17
 2851 04af 0400     		.2byte	0x4
 2852 04b1 F3       		.byte	0xf3
 2853 04b2 01       		.uleb128 0x1
 2854 04b3 50       		.byte	0x50
 2855 04b4 9F       		.byte	0x9f
 2856 04b5 00000000 		.4byte	0
 2857 04b9 00000000 		.4byte	0
 2858              	.LLST19:
 2859 04bd 00000000 		.4byte	.LVL72
 2860 04c1 0F000000 		.4byte	.LVL74-1
 2861 04c5 0100     		.2byte	0x1
 2862 04c7 51       		.byte	0x51
 2863 04c8 0F000000 		.4byte	.LVL74-1
 2864 04cc 1A000000 		.4byte	.LVL75
 2865 04d0 0400     		.2byte	0x4
 2866 04d2 F3       		.byte	0xf3
 2867 04d3 01       		.uleb128 0x1
 2868 04d4 51       		.byte	0x51
 2869 04d5 9F       		.byte	0x9f
 2870 04d6 1A000000 		.4byte	.LVL75
 2871 04da 23000000 		.4byte	.LVL76-1
 2872 04de 0100     		.2byte	0x1
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 67


 2873 04e0 50       		.byte	0x50
 2874 04e1 00000000 		.4byte	0
 2875 04e5 00000000 		.4byte	0
 2876              	.LLST20:
 2877 04e9 00000000 		.4byte	.LVL79
 2878 04ed 0C000000 		.4byte	.LVL80
 2879 04f1 0100     		.2byte	0x1
 2880 04f3 50       		.byte	0x50
 2881 04f4 0C000000 		.4byte	.LVL80
 2882 04f8 28000000 		.4byte	.LVL85
 2883 04fc 0100     		.2byte	0x1
 2884 04fe 54       		.byte	0x54
 2885 04ff 28000000 		.4byte	.LVL85
 2886 0503 48000000 		.4byte	.LFE18
 2887 0507 0400     		.2byte	0x4
 2888 0509 F3       		.byte	0xf3
 2889 050a 01       		.uleb128 0x1
 2890 050b 50       		.byte	0x50
 2891 050c 9F       		.byte	0x9f
 2892 050d 00000000 		.4byte	0
 2893 0511 00000000 		.4byte	0
 2894              	.LLST21:
 2895 0515 00000000 		.4byte	.LVL79
 2896 0519 0F000000 		.4byte	.LVL81-1
 2897 051d 0100     		.2byte	0x1
 2898 051f 51       		.byte	0x51
 2899 0520 0F000000 		.4byte	.LVL81-1
 2900 0524 1A000000 		.4byte	.LVL82
 2901 0528 0400     		.2byte	0x4
 2902 052a F3       		.byte	0xf3
 2903 052b 01       		.uleb128 0x1
 2904 052c 51       		.byte	0x51
 2905 052d 9F       		.byte	0x9f
 2906 052e 1A000000 		.4byte	.LVL82
 2907 0532 1D000000 		.4byte	.LVL83-1
 2908 0536 0100     		.2byte	0x1
 2909 0538 50       		.byte	0x50
 2910 0539 00000000 		.4byte	0
 2911 053d 00000000 		.4byte	0
 2912              		.section	.debug_aranges,"",%progbits
 2913 0000 AC000000 		.4byte	0xac
 2914 0004 0200     		.2byte	0x2
 2915 0006 00000000 		.4byte	.Ldebug_info0
 2916 000a 04       		.byte	0x4
 2917 000b 00       		.byte	0
 2918 000c 0000     		.2byte	0
 2919 000e 0000     		.2byte	0
 2920 0010 00000000 		.4byte	.LFB1
 2921 0014 C8010000 		.4byte	.LFE1-.LFB1
 2922 0018 00000000 		.4byte	.LFB2
 2923 001c 24000000 		.4byte	.LFE2-.LFB2
 2924 0020 00000000 		.4byte	.LFB0
 2925 0024 20000000 		.4byte	.LFE0-.LFB0
 2926 0028 00000000 		.4byte	.LFB3
 2927 002c 10000000 		.4byte	.LFE3-.LFB3
 2928 0030 00000000 		.4byte	.LFB4
 2929 0034 14000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 68


 2930 0038 00000000 		.4byte	.LFB5
 2931 003c 14000000 		.4byte	.LFE5-.LFB5
 2932 0040 00000000 		.4byte	.LFB6
 2933 0044 4C000000 		.4byte	.LFE6-.LFB6
 2934 0048 00000000 		.4byte	.LFB7
 2935 004c 38000000 		.4byte	.LFE7-.LFB7
 2936 0050 00000000 		.4byte	.LFB8
 2937 0054 10000000 		.4byte	.LFE8-.LFB8
 2938 0058 00000000 		.4byte	.LFB9
 2939 005c 14000000 		.4byte	.LFE9-.LFB9
 2940 0060 00000000 		.4byte	.LFB10
 2941 0064 1C000000 		.4byte	.LFE10-.LFB10
 2942 0068 00000000 		.4byte	.LFB11
 2943 006c 18000000 		.4byte	.LFE11-.LFB11
 2944 0070 00000000 		.4byte	.LFB12
 2945 0074 10000000 		.4byte	.LFE12-.LFB12
 2946 0078 00000000 		.4byte	.LFB13
 2947 007c 10000000 		.4byte	.LFE13-.LFB13
 2948 0080 00000000 		.4byte	.LFB14
 2949 0084 1C000000 		.4byte	.LFE14-.LFB14
 2950 0088 00000000 		.4byte	.LFB15
 2951 008c 1C000000 		.4byte	.LFE15-.LFB15
 2952 0090 00000000 		.4byte	.LFB16
 2953 0094 5C000000 		.4byte	.LFE16-.LFB16
 2954 0098 00000000 		.4byte	.LFB17
 2955 009c 40000000 		.4byte	.LFE17-.LFB17
 2956 00a0 00000000 		.4byte	.LFB18
 2957 00a4 48000000 		.4byte	.LFE18-.LFB18
 2958 00a8 00000000 		.4byte	0
 2959 00ac 00000000 		.4byte	0
 2960              		.section	.debug_ranges,"",%progbits
 2961              	.Ldebug_ranges0:
 2962 0000 00000000 		.4byte	.LFB1
 2963 0004 C8010000 		.4byte	.LFE1
 2964 0008 00000000 		.4byte	.LFB2
 2965 000c 24000000 		.4byte	.LFE2
 2966 0010 00000000 		.4byte	.LFB0
 2967 0014 20000000 		.4byte	.LFE0
 2968 0018 00000000 		.4byte	.LFB3
 2969 001c 10000000 		.4byte	.LFE3
 2970 0020 00000000 		.4byte	.LFB4
 2971 0024 14000000 		.4byte	.LFE4
 2972 0028 00000000 		.4byte	.LFB5
 2973 002c 14000000 		.4byte	.LFE5
 2974 0030 00000000 		.4byte	.LFB6
 2975 0034 4C000000 		.4byte	.LFE6
 2976 0038 00000000 		.4byte	.LFB7
 2977 003c 38000000 		.4byte	.LFE7
 2978 0040 00000000 		.4byte	.LFB8
 2979 0044 10000000 		.4byte	.LFE8
 2980 0048 00000000 		.4byte	.LFB9
 2981 004c 14000000 		.4byte	.LFE9
 2982 0050 00000000 		.4byte	.LFB10
 2983 0054 1C000000 		.4byte	.LFE10
 2984 0058 00000000 		.4byte	.LFB11
 2985 005c 18000000 		.4byte	.LFE11
 2986 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 69


 2987 0064 10000000 		.4byte	.LFE12
 2988 0068 00000000 		.4byte	.LFB13
 2989 006c 10000000 		.4byte	.LFE13
 2990 0070 00000000 		.4byte	.LFB14
 2991 0074 1C000000 		.4byte	.LFE14
 2992 0078 00000000 		.4byte	.LFB15
 2993 007c 1C000000 		.4byte	.LFE15
 2994 0080 00000000 		.4byte	.LFB16
 2995 0084 5C000000 		.4byte	.LFE16
 2996 0088 00000000 		.4byte	.LFB17
 2997 008c 40000000 		.4byte	.LFE17
 2998 0090 00000000 		.4byte	.LFB18
 2999 0094 48000000 		.4byte	.LFE18
 3000 0098 00000000 		.4byte	0
 3001 009c 00000000 		.4byte	0
 3002              		.section	.debug_line,"",%progbits
 3003              	.Ldebug_line0:
 3004 0000 C0020000 		.section	.debug_str,"MS",%progbits,1
 3004      02005500 
 3004      00000201 
 3004      FB0E0D00 
 3004      01010101 
 3005              	.LASF55:
 3006 0000 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_Volts\000"
 3006      5341525F 
 3006      5365715F 
 3006      436F756E 
 3006      7473546F 
 3007              	.LASF10:
 3008 001b 75696E74 		.ascii	"uint16\000"
 3008      313600
 3009              	.LASF40:
 3010 0022 4144435F 		.ascii	"ADC_SAR_Seq_EnableInjection\000"
 3010      5341525F 
 3010      5365715F 
 3010      456E6162 
 3010      6C65496E 
 3011              	.LASF50:
 3012 003e 61646347 		.ascii	"adcGain\000"
 3012      61696E00 
 3013              	.LASF24:
 3014 0046 636F756E 		.ascii	"counts\000"
 3014      747300
 3015              	.LASF49:
 3016 004d 4144435F 		.ascii	"ADC_SAR_Seq_SetGain\000"
 3016      5341525F 
 3016      5365715F 
 3016      53657447 
 3016      61696E00 
 3017              	.LASF33:
 3018 0061 4144435F 		.ascii	"ADC_SAR_Seq_IsEndConversion\000"
 3018      5341525F 
 3018      5365715F 
 3018      4973456E 
 3018      64436F6E 
 3019              	.LASF54:
 3020 007d 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_uVolts\000"
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 70


 3020      5341525F 
 3020      5365715F 
 3020      436F756E 
 3020      7473546F 
 3021              	.LASF7:
 3022 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 3022      206C6F6E 
 3022      6720756E 
 3022      7369676E 
 3022      65642069 
 3023              	.LASF51:
 3024 00b0 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_mVolts\000"
 3024      5341525F 
 3024      5365715F 
 3024      436F756E 
 3024      7473546F 
 3025              	.LASF6:
 3026 00cc 6C6F6E67 		.ascii	"long long int\000"
 3026      206C6F6E 
 3026      6720696E 
 3026      7400
 3027              	.LASF0:
 3028 00da 7369676E 		.ascii	"signed char\000"
 3028      65642063 
 3028      68617200 
 3029              	.LASF13:
 3030 00e6 696E7433 		.ascii	"int32\000"
 3030      3200
 3031              	.LASF4:
 3032 00ec 6C6F6E67 		.ascii	"long int\000"
 3032      20696E74 
 3032      00
 3033              	.LASF9:
 3034 00f5 75696E74 		.ascii	"uint8\000"
 3034      3800
 3035              	.LASF62:
 3036 00fb 43794465 		.ascii	"CyDelayUs\000"
 3036      6C617955 
 3036      7300
 3037              	.LASF16:
 3038 0105 646F7562 		.ascii	"double\000"
 3038      6C6500
 3039              	.LASF11:
 3040 010c 75696E74 		.ascii	"uint32\000"
 3040      333200
 3041              	.LASF26:
 3042 0113 4144435F 		.ascii	"ADC_SAR_Seq_Init\000"
 3042      5341525F 
 3042      5365715F 
 3042      496E6974 
 3042      00
 3043              	.LASF39:
 3044 0124 6D61736B 		.ascii	"mask\000"
 3044      00
 3045              	.LASF35:
 3046 0129 7265744D 		.ascii	"retMode\000"
 3046      6F646500 
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 71


 3047              	.LASF8:
 3048 0131 756E7369 		.ascii	"unsigned int\000"
 3048      676E6564 
 3048      20696E74 
 3048      00
 3049              	.LASF34:
 3050 013e 4144435F 		.ascii	"ADC_SAR_Seq_GetResult16\000"
 3050      5341525F 
 3050      5365715F 
 3050      47657452 
 3050      6573756C 
 3051              	.LASF66:
 3052 0156 75566F6C 		.ascii	"uVolts\000"
 3052      747300
 3053              	.LASF5:
 3054 015d 6C6F6E67 		.ascii	"long unsigned int\000"
 3054      20756E73 
 3054      69676E65 
 3054      6420696E 
 3054      7400
 3055              	.LASF56:
 3056 016f 766F6C74 		.ascii	"volts\000"
 3056      7300
 3057              	.LASF23:
 3058 0175 746D7052 		.ascii	"tmpRegVal\000"
 3058      65675661 
 3058      6C00
 3059              	.LASF65:
 3060 017f 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\Repos\\PSOC4Pioneer\\Work"
 3060      635C486F 
 3060      6D655C44 
 3060      6F63756D 
 3060      656E7473 
 3061 01ab 73706163 		.ascii	"space01\\Design01.cydsn\000"
 3061      6530315C 
 3061      44657369 
 3061      676E3031 
 3061      2E637964 
 3062              	.LASF60:
 3063 01c2 4144435F 		.ascii	"ADC_SAR_Seq_countsPer10Volt\000"
 3063      5341525F 
 3063      5365715F 
 3063      636F756E 
 3063      74735065 
 3064              	.LASF3:
 3065 01de 73686F72 		.ascii	"short unsigned int\000"
 3065      7420756E 
 3065      7369676E 
 3065      65642069 
 3065      6E7400
 3066              	.LASF59:
 3067 01f1 4144435F 		.ascii	"ADC_SAR_Seq_offset\000"
 3067      5341525F 
 3067      5365715F 
 3067      6F666673 
 3067      657400
 3068              	.LASF67:
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 72


 3069 0204 4379496E 		.ascii	"CyIntSetVector\000"
 3069      74536574 
 3069      56656374 
 3069      6F7200
 3070              	.LASF31:
 3071 0213 4144435F 		.ascii	"ADC_SAR_Seq_StopConvert\000"
 3071      5341525F 
 3071      5365715F 
 3071      53746F70 
 3071      436F6E76 
 3072              	.LASF53:
 3073 022b 6D566F6C 		.ascii	"mVolts\000"
 3073      747300
 3074              	.LASF19:
 3075 0232 72656733 		.ascii	"reg32\000"
 3075      3200
 3076              	.LASF57:
 3077 0238 4144435F 		.ascii	"ADC_SAR_Seq_channelsConfig\000"
 3077      5341525F 
 3077      5365715F 
 3077      6368616E 
 3077      6E656C73 
 3078              	.LASF14:
 3079 0253 666C6F61 		.ascii	"float32\000"
 3079      74333200 
 3080              	.LASF21:
 3081 025b 73697A65 		.ascii	"sizetype\000"
 3081      74797065 
 3081      00
 3082              	.LASF42:
 3083 0264 6C6F774C 		.ascii	"lowLimit\000"
 3083      696D6974 
 3083      00
 3084              	.LASF30:
 3085 026d 4144435F 		.ascii	"ADC_SAR_Seq_StartConvert\000"
 3085      5341525F 
 3085      5365715F 
 3085      53746172 
 3085      74436F6E 
 3086              	.LASF63:
 3087 0286 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3087      4320342E 
 3087      392E3320 
 3087      32303135 
 3087      30333033 
 3088 02b9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3088      20726576 
 3088      6973696F 
 3088      6E203232 
 3088      31323230 
 3089 02ec 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3089      66756E63 
 3089      74696F6E 
 3089      2D736563 
 3089      74696F6E 
 3090              	.LASF17:
 3091 0314 696E7436 		.ascii	"int64\000"
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 73


 3091      3400
 3092              	.LASF61:
 3093 031a 4379496E 		.ascii	"CyIntSetPriority\000"
 3093      74536574 
 3093      5072696F 
 3093      72697479 
 3093      00
 3094              	.LASF15:
 3095 032b 666C6F61 		.ascii	"float\000"
 3095      7400
 3096              	.LASF25:
 3097 0331 4144435F 		.ascii	"ADC_SAR_Seq_InputsPlacement\000"
 3097      5341525F 
 3097      5365715F 
 3097      496E7075 
 3097      7473506C 
 3098              	.LASF44:
 3099 034d 68696768 		.ascii	"highLimit\000"
 3099      4C696D69 
 3099      7400
 3100              	.LASF38:
 3101 0357 4144435F 		.ascii	"ADC_SAR_Seq_SetChanMask\000"
 3101      5341525F 
 3101      5365715F 
 3101      53657443 
 3101      68616E4D 
 3102              	.LASF68:
 3103 036f 43794861 		.ascii	"CyHalt\000"
 3103      6C7400
 3104              	.LASF1:
 3105 0376 756E7369 		.ascii	"unsigned char\000"
 3105      676E6564 
 3105      20636861 
 3105      7200
 3106              	.LASF2:
 3107 0384 73686F72 		.ascii	"short int\000"
 3107      7420696E 
 3107      7400
 3108              	.LASF28:
 3109 038e 4144435F 		.ascii	"ADC_SAR_Seq_Start\000"
 3109      5341525F 
 3109      5365715F 
 3109      53746172 
 3109      7400
 3110              	.LASF46:
 3111 03a0 4144435F 		.ascii	"ADC_SAR_Seq_SetSatMask\000"
 3111      5341525F 
 3111      5365715F 
 3111      53657453 
 3111      61744D61 
 3112              	.LASF22:
 3113 03b7 63684E75 		.ascii	"chNum\000"
 3113      6D00
 3114              	.LASF58:
 3115 03bd 4144435F 		.ascii	"ADC_SAR_Seq_initVar\000"
 3115      5341525F 
 3115      5365715F 
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 74


 3115      696E6974 
 3115      56617200 
 3116              	.LASF45:
 3117 03d1 4144435F 		.ascii	"ADC_SAR_Seq_SetLimitMask\000"
 3117      5341525F 
 3117      5365715F 
 3117      5365744C 
 3117      696D6974 
 3118              	.LASF36:
 3119 03ea 6368616E 		.ascii	"chan\000"
 3119      00
 3120              	.LASF18:
 3121 03ef 63686172 		.ascii	"char\000"
 3121      00
 3122              	.LASF20:
 3123 03f4 63796973 		.ascii	"cyisraddress\000"
 3123      72616464 
 3123      72657373 
 3123      00
 3124              	.LASF64:
 3125 0401 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c\000"
 3125      6E657261 
 3125      7465645F 
 3125      536F7572 
 3125      63655C50 
 3126              	.LASF48:
 3127 0428 6F666673 		.ascii	"offset\000"
 3127      657400
 3128              	.LASF52:
 3129 042f 61646343 		.ascii	"adcCounts\000"
 3129      6F756E74 
 3129      7300
 3130              	.LASF29:
 3131 0439 4144435F 		.ascii	"ADC_SAR_Seq_Stop\000"
 3131      5341525F 
 3131      5365715F 
 3131      53746F70 
 3131      00
 3132              	.LASF32:
 3133 044a 73746174 		.ascii	"status\000"
 3133      757300
 3134              	.LASF27:
 3135 0451 4144435F 		.ascii	"ADC_SAR_Seq_Enable\000"
 3135      5341525F 
 3135      5365715F 
 3135      456E6162 
 3135      6C6500
 3136              	.LASF12:
 3137 0464 696E7431 		.ascii	"int16\000"
 3137      3600
 3138              	.LASF43:
 3139 046a 4144435F 		.ascii	"ADC_SAR_Seq_SetHighLimit\000"
 3139      5341525F 
 3139      5365715F 
 3139      53657448 
 3139      6967684C 
 3140              	.LASF37:
ARM GAS  C:\Users\ELISHA~1\AppData\Local\Temp\ccPvIcbh.s 			page 75


 3141 0483 72657375 		.ascii	"result\000"
 3141      6C7400
 3142              	.LASF41:
 3143 048a 4144435F 		.ascii	"ADC_SAR_Seq_SetLowLimit\000"
 3143      5341525F 
 3143      5365715F 
 3143      5365744C 
 3143      6F774C69 
 3144              	.LASF47:
 3145 04a2 4144435F 		.ascii	"ADC_SAR_Seq_SetOffset\000"
 3145      5341525F 
 3145      5365715F 
 3145      5365744F 
 3145      66667365 
 3146              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
